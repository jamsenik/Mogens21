{"version":3,"sources":["YatzySet.ts","Felt.tsx","Række.tsx","ResultatFelt.tsx","LæsRække.tsx","Navne.tsx","Clear.tsx","ButtonBar.tsx","ShortCuts.tsx","RemoteState.ts","Game.tsx","index.tsx"],"names":["YatzySet","rounds","left","right","r","UpperRound","push","PatternRound","FixedRound","Round","this","l","p","roundsPlayed","console","log","playedRounds","length","i","filter","round","blank","reduce","sum","score","bonus","isTopSet","slice","every","map","cubes","scratched","scrathed","index","element","scratch","forEach","cube","add","c","dice","pop","clear","join","toString","v","kind","pattern","bonusPoints","Array","fill","isAPreviousValue","d","includes","set","Felt","props","TableCell","onClick","sx","paddingX","paddingY","minWidth","fontSize","bgcolor","CurrentRound","align","Række","TableRow","selected","some","currentRound","color","available","Slags","FeltI","ResultatFelt","Value","LæsRække","LæsFeltI","Tal","Navn","theName","names","paddingTop","maxHeight","TextField","variant","value","error","valid","helperText","size","onFocus","event","target","select","inputProps","style","padding","onChange","e","updateName","Navne","TableHead","Clear","React","open","setOpen","handleClose","MenuItem","ListItemIcon","Dialog","onClose","DialogTitle","DialogActions","Button","autoFocus","screenfull","require","ButtonBar","useState","anchorEl","setAnchorEl","Boolean","AppBar","position","top","bottom","Toolbar","disableGutters","Box","flexGrow","ButtonGroup","Dice","IconButton","edge","backspace","currentTarget","id","MenuListProps","isEnabled","toggle","fontFamily","diceClick","disabled","diceEnabled","ShortCuts","handlers","ONE","preventDefault","TWO","THREE","FOUR","FIVE","SIX","BACK_SPACE","NEXT","next","keyMap","fbapp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","state","setDoc","doc","JSON","stringify","Game","callback","emptySets","clearSets","YatzySets","currentSet","game","allRounds","storedSets","setCubes","setState","currentPlayer","onSnapshot","data","undefined","parse","sets","setRight","setLeft","newState","storeBoard","player","handleClick","ys","canBeNext","back","name","allCubes","statedto","StoreRemoteState","className","addDice","nextSet","slags","rowFunc","rowRounds","removeDice","TableContainer","component","Paper","Table","verify","TableBody","række","toArray","clearBoard","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69061738.chunk.js","sourcesContent":["export class YatzySet {\r\n    rounds: Round[];\r\n    left: YatzySet | null;\r\n    right: YatzySet | null;\r\n\r\n    constructor() {\r\n        let r: Round[] = [new UpperRound(1), new UpperRound(2), new UpperRound(3), new UpperRound(4), new UpperRound(5), new UpperRound(6)];\r\n        r.push(new PatternRound([2]));\r\n        r.push(new PatternRound([2, 2]));\r\n        r.push(new PatternRound([2, 2, 2]));\r\n        r.push(new PatternRound([3]));\r\n        r.push(new PatternRound([4]));\r\n        r.push(new PatternRound([3, 3]));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5], 0));\r\n        r.push(new FixedRound([2, 3, 4, 5, 6], 0));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5, 6], 9));\r\n        r.push(new PatternRound([3, 2]));\r\n        r.push(new Round());\r\n        r.push(new PatternRound([6], 100));\r\n        this.rounds = r;\r\n        this.left = null;\r\n        this.right = null;\r\n\r\n    }\r\n\r\n    setLeft(l: YatzySet) {\r\n        this.left = l;\r\n    }\r\n\r\n    setRight(r: YatzySet) {\r\n        this.right = r;\r\n    }\r\n\r\n\r\n    verify() {\r\n        let p = this.roundsPlayed();\r\n        if (this.left !== null && p !== 0) {\r\n            console.log(\"Left: \" + this.left);\r\n            let l = this.left.roundsPlayed();\r\n            console.log(\"p: \" + p + \" l: \" + l);\r\n            if (l !== p && l !== p + 1) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.right !== null) {\r\n            let r = this.right.roundsPlayed();\r\n            if (r !== 0) {\r\n                if (r !== p - 1 && r !== p) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    roundsPlayed() {\r\n        return this.playedRounds().length;\r\n    }\r\n\r\n    round(i: number): Round {\r\n        return this.rounds[i];\r\n    }\r\n\r\n    score(): number {\r\n        return this.rounds.filter(round => !round.blank()).reduce((sum, round) => sum + round.score(), 0) + this.bonus();\r\n    }\r\n\r\n    bonus(): number {\r\n        return this.isTopSet() && this.rounds.slice(0, 6).reduce((sum, r) => sum + r.score(), 0) >= 0 ? 50 : 0;\r\n    }\r\n\r\n    isTopSet(): boolean {\r\n        const ts = this.rounds.slice(0, 6).every(round => !round.blank());\r\n        return ts;\r\n    }\r\n\r\n    playedRounds(): Round[] {\r\n        return this.rounds.filter(round => !round.blank());\r\n    }\r\n\r\n    allCubes(): RoundState[] {\r\n        return this.rounds.map(r => {\r\n            var state: RoundState = {\r\n                cubes: r.cubes,\r\n                scratched: r.scrathed\r\n\r\n            };\r\n            return state;\r\n        });\r\n    }\r\n\r\n    setCubes(rounds: RoundState[]) {\r\n        for (let index = 0; index < rounds.length; index++) {\r\n            const element = rounds[index];\r\n            if (element.scratched) {\r\n                this.rounds[index].scratch();\r\n            } else {\r\n                element.cubes.forEach(cube => {\r\n                    this.rounds[index].add(cube);\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport interface GameState {\r\n    names: string[];\r\n    rounds: RoundState[][];\r\n    currentPlayer: number;\r\n    currentRound: number;\r\n}\r\n\r\nexport interface RoundState {\r\n    cubes: number[];\r\n    scratched: boolean;\r\n}\r\n\r\nexport class Round {\r\n    cubes: number[];\r\n    scrathed: boolean;\r\n    constructor() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    score(): number {\r\n        if (this.scrathed) {\r\n            return 0;\r\n        }\r\n        return this.cubes.reduce((sum, c) => sum + c, 0);\r\n    }\r\n\r\n    blank(): boolean {\r\n        return this.cubes.length === 0 && !this.scrathed;\r\n    }\r\n\r\n    add(dice: number) {\r\n        this.cubes.push(dice);\r\n        this.scrathed = false;\r\n\r\n    }\r\n\r\n    scratch() {\r\n        this.cubes = [];\r\n        this.scrathed = true;\r\n    }\r\n\r\n    clear() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    back() {\r\n        this.cubes.pop();\r\n        if (this.scrathed) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    toArray(): string {\r\n        return this.cubes.join(\"\");\r\n    }\r\n\r\n    toString(): string {\r\n        if (this.scrathed) {\r\n            return \"X\";\r\n        }\r\n        if (this.blank()) {\r\n            return \"\\xa0\";\r\n        }\r\n        return this.score().toString();\r\n    }\r\n\r\n    bonus(): number {\r\n        return 0;\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return this.cubes.length < 6;\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return this.cubes.length > 0 && this.cubes.length < 6;\r\n    }\r\n}\r\n\r\nclass UpperRound extends Round {\r\n    kind: number;\r\n    constructor(kind: number) {\r\n        super();\r\n        this.kind = kind;\r\n    }\r\n\r\n    add(dice: number) {\r\n        if (dice === this.kind) {\r\n            super.add(dice)\r\n        }\r\n    }\r\n\r\n    score(): number {\r\n        return super.score() - 4 * this.kind\r\n    }\r\n\r\n    bouns(): number {\r\n        return this.score()\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return super.canBeNext(v) && v === this.kind;\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nclass PatternRound extends Round {\r\n    pattern: number[];\r\n    kind: number[];\r\n    bonusPoints: number;\r\n    index: number;\r\n    constructor(pattern: number[], bonus: number = 0) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.kind = Array(pattern.length).fill(0);\r\n        this.bonusPoints = bonus;\r\n        this.index = 0;\r\n    }\r\n\r\n    add(dice: number) {\r\n        console.log(\"Adding: \" + dice);\r\n        if (this.isAPreviousValue(dice) || this.index >= this.pattern.length) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.pattern[this.index]; i++) {\r\n            super.add(dice);\r\n        }\r\n        this.kind[this.index] = dice;\r\n        this.index += 1\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return super.canBeNext(v) && !this.isAPreviousValue(v) && this.index < this.pattern.length\r\n    }\r\n\r\n    isAPreviousValue(d: number): boolean {\r\n        return this.kind.includes(d);\r\n    }\r\n\r\n    clear() {\r\n        super.clear()\r\n        this.kind = Array(this.pattern.length).fill(0);\r\n        this.index = 0\r\n    }\r\n\r\n    back() {\r\n        if (this.index === 0) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this.index -= 1;\r\n        this.kind[this.index] = 0;\r\n        for (let i = 0; i < this.pattern[this.index]; i++) {\r\n            super.back();\r\n        }\r\n    }\r\n\r\n    score(): number {\r\n        return (this.index === this.pattern.length ? this.bonusPoints : 0) + super.score();\r\n    }\r\n\r\n    scratch() {\r\n        this.clear()\r\n        super.scratch()\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return this.index !== 0 && this.index < this.pattern.length\r\n    }\r\n}\r\n\r\nclass FixedRound extends Round {\r\n    bonusPoints: number;\r\n    set: boolean;\r\n    pattern: number[];\r\n    constructor(pattern: number[], bonusPoints: number) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.bonusPoints = bonusPoints;\r\n        this.set = false;\r\n\r\n    }\r\n\r\n    add(dice: number) {\r\n        if (!this.pattern.includes(dice) || this.set) {\r\n            return\r\n        }\r\n        this.pattern.forEach(d => super.add(d));\r\n        this.set = true;\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return !this.set && this.pattern.includes(v);\r\n    }\r\n\r\n\r\n    clear() {\r\n        super.clear();\r\n        this.set = false;\r\n    }\r\n\r\n    back() {\r\n        this.pattern.forEach(d => super.back());\r\n        this.set = false;\r\n    }\r\n\r\n    scratch() {\r\n        super.scratch();\r\n        this.set = false;\r\n    }\r\n\r\n    score(): number {\r\n        return (this.set ? this.bonusPoints : 0) + super.score();\r\n    }\r\n\r\n    ssIncomplete(): boolean {\r\n        return false;\r\n    }\r\n\r\n}","import { TableCell } from '@mui/material';\r\nimport { Round } from './YatzySet'\r\n\r\nexport function Felt(props: Props) {\r\n    return (\r\n        <TableCell \r\n            onClick={props.onClick} \r\n            sx={{paddingX:0, paddingY:0, minWidth: \"10px\", fontSize: \"2.2vh\", bgcolor: props.Round === props.CurrentRound ? \"primary.main\" : null}}\r\n            align='center'\r\n            >\r\n            {props.Round?.toString()+\" \"}\r\n        </TableCell>\r\n    );\r\n}\r\n\r\n\r\ninterface Props {\r\n    onClick: () => void;\r\n    Round: Round;\r\n    CurrentRound: Round;\r\n  }\r\n\r\n","import { TableCell, TableRow } from '@mui/material';\r\nimport React from 'react';\r\nimport { Felt } from './Felt'\r\nimport { Round } from './YatzySet'\r\n\r\nexport function Række(props: Props) {\r\n    return (\r\n        <TableRow selected = {props.rounds.some(r => r === props.currentRound)}\r\n                 sx={{}}\r\n        >\r\n            <TableCell align=\"left\"\r\n                sx={{ color: props.available ? 'text.primary' : 'ghostwhite', \r\n                      paddingY:\"0px\",\r\n                      fontSize: \"2.3vh\"\r\n            }}\r\n            >\r\n                {props.Slags}\r\n            </TableCell>\r\n            {FeltI(0 , props)}\r\n            {FeltI(1 , props)}\r\n            {FeltI(2 , props)}\r\n            {FeltI(3 , props)}\r\n            {FeltI(4 , props)}\r\n            {FeltI(5 , props)}\r\n\r\n\r\n        </TableRow>\r\n\r\n    );\r\n}\r\n\r\nfunction FeltI(i: number, props: Props) {\r\n    return (\r\n        <Felt onClick={() => props.onClick(i)}\r\n            Round={props.rounds[i]}\r\n            CurrentRound={props.currentRound} />\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    onClick: (i: number) => void;\r\n    rounds: Round[];\r\n    Slags: string;\r\n    available: boolean;\r\n    currentRound: Round;\r\n}\r\n","import { TableCell } from '@mui/material';\r\nexport function ResultatFelt(props: Props) {\r\n    return (\r\n            <TableCell sx={{paddingX:0, paddingY:0, minWidth: \"10px\", fontSize: \"2.2vh\"}}\r\n                    align='center'>\r\n                {props.Value}\r\n            </TableCell>\r\n    );\r\n}\r\n\r\n\r\ninterface Props {\r\n    Value: string;\r\n  }\r\n\r\n","import {ResultatFelt} from './ResultatFelt'\r\nimport { TableCell, TableRow } from '@mui/material';\r\n\r\nexport function LæsRække(props: Props) {\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell align=\"left\"\r\n             sx={{ paddingY:\"2px\", fontSize: \"2.2vh\"}} \r\n            >\r\n                {props.Slags}\r\n            </TableCell>\r\n            {LæsFeltI(0 , props)}\r\n            {LæsFeltI(1 , props)}\r\n            {LæsFeltI(2 , props)}\r\n            {LæsFeltI(3 , props)}\r\n            {LæsFeltI(4 , props)}\r\n            {LæsFeltI(5 , props)}\r\n\r\n\r\n        </TableRow>\r\n\r\n    );\r\n}\r\n\r\nfunction LæsFeltI(i: number, props: Props){\r\n    return <ResultatFelt Value={props.Tal[i].toString()} />;\r\n\r\n}\r\n\r\ninterface Props {\r\n    Slags: string;\r\n    Tal: number[];\r\n  }\r\n","import { TableCell, TableHead, TableRow, TextField } from '@mui/material';\r\nimport React from 'react';\r\n\r\n\r\ninterface Props {\r\n    valid: boolean[];\r\n    names: string[];\r\n    updateName: (name: string, index: number) => void;\r\n}\r\n\r\nfunction Navn(i: number, props: Props) {\r\n    const theName = props.names[i];\r\n    return <TableCell sx={{paddingX:\"2px\", paddingY:\"px\", minWidth: \"10px\", paddingTop: 0, maxHeight: \"2vh\"}}>\r\n        <TextField\r\n            variant=\"filled\"\r\n            value={theName}\r\n            error={!props.valid[i]}\r\n            helperText={!props.valid[i] ? \"FEJL\" : \"\"}\r\n            size=\"small\"\r\n            onFocus={event => {\r\n                event.target.select();\r\n              }}\r\n              inputProps={{\r\n                style: {\r\n                  padding: 5\r\n                }\r\n             }}\r\n             onChange={ e => props.updateName(e.target.value, i)}\r\n\r\n        >  </TextField>\r\n    </TableCell>\r\n\r\n}\r\n\r\nexport function Navne(props: Props) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell sx={{paddingX:\"1px\", paddingY:\"0px\", minWidth: \"10px\", maxHeight: \"1vh\"}}/>\r\n                {Navn(0, props)}\r\n                {Navn(1, props)}\r\n                {Navn(2, props)}\r\n                {Navn(3, props)}\r\n                {Navn(4, props)}\r\n                {Navn(5, props)}\r\n            </TableRow>\r\n        </TableHead >\r\n\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { ListItemIcon, MenuItem } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\ninterface Props {\r\n  clear: () => void;\r\n}\r\n\r\nexport default function Clear(props: Props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem onClick={handleClickOpen}>\r\n        <ListItemIcon>\r\n          <DeleteIcon fontSize=\"large\" />\r\n        </ListItemIcon>\r\n      </MenuItem>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle >\r\n          {\"Slet spil?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Nåhr, nej</Button>\r\n          <Button onClick={() => {props.clear(); handleClose()}} autoFocus>Ægte!</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Box from '@mui/material/Box';\r\nimport BackspaceIcon from '@mui/icons-material/Backspace';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Button from '@mui/material/Button';\r\nimport { ButtonGroup, ListItemIcon } from '@mui/material';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\r\nimport Clear from './Clear';\r\n\r\nconst size = \"min(6vw, 1cm)\"\r\nconst screenfull = require('screenfull');\r\n\r\nexport function ButtonBar(props: Props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n\r\n        \r\n    };\r\n\r\n    // enabling fullscreen has to be done after some user input\r\n    const toggleFullScreen = () => {\r\n        if (screenfull.isEnabled) {\r\n            screenfull.toggle();\r\n        }\r\n    };\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\r\n            <Toolbar disableGutters={true}>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <ButtonGroup variant=\"text\" size=\"small\">\r\n                    {Dice(1, props)}\r\n                    {Dice(2, props)}\r\n                    {Dice(3, props)}\r\n                    {Dice(4, props)}\r\n                    {Dice(5, props)}\r\n                    {Dice(6, props)}\r\n                    <IconButton color=\"inherit\" edge='start' onClick={() => props.scratch()}>\r\n                        <ClearIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                    <IconButton color=\"inherit\" edge='start' onClick={() => props.backspace()}>\r\n                        <BackspaceIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                    <IconButton color=\"inherit\" edge='start' onClick={handleClick}>\r\n                        <MenuIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                </ButtonGroup>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                   <Clear clear={props.clear}/>\r\n                    <MenuItem onClick={() => {toggleFullScreen(); handleClose() }}>\r\n                        <ListItemIcon>\r\n                            <FullscreenIcon fontSize=\"large\" />\r\n                        </ListItemIcon>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\n\r\nfunction Dice(i: number, props: Props) {\r\n    return (<Button\r\n        variant=\"contained\"\r\n        sx={{ fontSize: size, fontFamily: 'Mogens Dice' }}\r\n        onClick={() => props.diceClick(i)}\r\n        disabled={!props.diceEnabled(i)}\r\n        size='small'\r\n    >\r\n        {i}\r\n    </Button>);\r\n}\r\n\r\ninterface Props {\r\n    diceClick: (i: number) => void;\r\n    diceEnabled: (i: number) => boolean;\r\n    backspace: () => void;\r\n    scratch: () => void;\r\n    clear: () => void;\r\n}\r\n","import React from 'react';\r\nimport { GlobalHotKeys } from 'react-hotkeys';\r\n\r\nexport function ShortCuts(props: Props) {\r\n    const keyMap = {\r\n        ONE: \"1\",\r\n        TWO: \"2\",\r\n        THREE: \"3\",\r\n        FOUR: \"4\",\r\n        FIVE: \"5\",\r\n        SIX: \"6\",\r\n        BACK_SPACE: \"del backspace\",\r\n        NEXT: \"space ctrl+m\"\r\n    };\r\n\r\n    const one : (keyEvent?: KeyboardEvent) => void = (event) => {\r\n        console.log(\"One\");\r\n        if (event) {\r\n            event.preventDefault();\r\n          }\r\n        props.diceClick(1);\r\n    };\r\n    const two = () => {\r\n        console.log(\"Two\");\r\n\r\n        props.diceClick(2);\r\n    };\r\n    const three = () => {\r\n        props.diceClick(3);\r\n    };\r\n    const four = () => {\r\n        props.diceClick(4);\r\n    };\r\n    const five = () => {\r\n        props.diceClick(5);\r\n    };\r\n    const six = () => {\r\n        props.diceClick(6);\r\n    };\r\n    const backspace = () => {\r\n        props.backspace();\r\n    };\r\n    const next = () => {\r\n        console.log(\"Next\");\r\n        props.next();\r\n    };\r\n\r\n    const handlers = {\r\n        ONE: one,\r\n        TWO: two,\r\n        THREE: three,\r\n        FOUR: four,\r\n        FIVE: five,\r\n        SIX: six,\r\n        BACK_SPACE: backspace,\r\n        NEXT: next\r\n\r\n    };\r\n    return (\r\n        <GlobalHotKeys keyMap={keyMap} handlers={handlers} />)\r\n}\r\n\r\ninterface Props {\r\n    diceClick: (i: number) => void;\r\n    // diceEnabled: (i: number) => boolean;\r\n    backspace: () => void;\r\n    // scratch: () => void;\r\n    // clear: () => void;\r\n    next: () => void;\r\n}","\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, getDocs, getDoc, setDoc, doc, onSnapshot } from 'firebase/firestore';\r\nimport { GameState, RoundState, YatzySet } from './YatzySet';\r\n\r\nconst fbapp = initializeApp({\r\n    apiKey: \"AIzaSyDXKRP_mnNEJF5wkWkZ0fGFmPUAIZvE7Js\",\r\n    authDomain: \"mogens-357414.firebaseapp.com\",\r\n    projectId: \"mogens-357414\",\r\n    storageBucket: \"mogens-357414.appspot.com\",\r\n    messagingSenderId: \"290609839228\",\r\n    appId: \"1:290609839228:web:94a29c55cb630c9df49df9\"\r\n})\r\n\r\nexport const db = getFirestore(fbapp);\r\n\r\nexport function GetRemoteState(callback: (game: GameState) => void) {\r\n    // console.log(\"Getting from fire\");\r\n    const unsub = onSnapshot(doc(db, \"YatzySets\", \"shared\"), (doc) => {\r\n        const data = doc.data();\r\n        if (data === undefined){\r\n            return;\r\n        }\r\n        const state = JSON.parse(data.state) as GameState;\r\n        console.log(\"Current state: \", state);\r\n        callback(state);\r\n\r\n        // const state = Array<RoundState[]>(0);\r\n        // Object.keys(data).forEach((key) => {\r\n        //     const subdata = data[key]\r\n        //     const subarray: RoundState[] = [];\r\n        //     Object.keys(subdata).forEach((subkey) => {\r\n        //         var roundState = subdata[subkey] as RoundState;\r\n        //         subarray.push(roundState);\r\n        //     });\r\n        //     state.push(subarray);\r\n        // });\r\n        // console.log(state);\r\n    \r\n        // callback(state);\r\n        //var allRounds: RoundState[][] = data;\r\n        //console.log(allRounds);\r\n    });\r\n\r\n    \r\n        \r\n    console.log(\"Done with fire\");\r\n}\r\n\r\nexport async function StoreRemoteState(state: GameState) {\r\n    await setDoc(doc(db, \"YatzySets\", \"shared\"), { state: JSON.stringify(state) });\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Round, YatzySet, RoundState, GameState } from './YatzySet';\r\nimport { Række } from './Række';\r\nimport { LæsRække } from './LæsRække';\r\nimport { Navne } from \"./Navne\";\r\nimport { ReactElement } from 'react';\r\nimport { ButtonBar } from './ButtonBar';\r\nimport { Paper, Table, TableBody, TableContainer } from '@mui/material';\r\nimport { ShortCuts } from './ShortCuts';\r\nimport { GetRemoteState, StoreRemoteState } from './RemoteState';\r\nimport { StatsBase } from 'fs';\r\n\r\n\r\n\r\ninterface State {\r\n    YatzySets: YatzySet[];\r\n    currentSet: number;\r\n    currentRound: number;\r\n    names: string[];\r\n}\r\n\r\n\r\nexport class Game extends React.Component<{}, State> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        let emptySets = this.clearSets();\r\n        const names = [\"Spiller 1\", \"Spiller 2\", \"Spiller 3\", \"Spiller 4\", \"Spiller 5\", \"Spiller 6\"];\r\n        this.state = {\r\n            YatzySets: emptySets,\r\n            currentSet: 0,\r\n            currentRound: 0,\r\n            names: names\r\n        };\r\n\r\n        GetRemoteState(\r\n            game => {\r\n                const allRounds = game.rounds;\r\n                console.log(\"As promised: \", allRounds);\r\n\r\n                let storedSets = this.clearSets();\r\n                for (let index = 0; index < allRounds.length; index++) {\r\n                    const element = allRounds[index];\r\n                    storedSets[index].setCubes(element);\r\n                }\r\n                this.setState(\r\n                    {\r\n                        YatzySets: storedSets,\r\n                        currentSet: game.currentPlayer,\r\n                        currentRound: game.currentRound,\r\n                        names: game.names\r\n                    }\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    clearSets(): YatzySet[] {\r\n        let sets = Array(6).fill(null).map(() => new YatzySet());\r\n        for (let index = 1; index < sets.length; index++) {\r\n            const left = sets[index - 1];\r\n            const right = sets[index];\r\n            left.setRight(right);\r\n            right.setLeft(left);\r\n        }\r\n        return sets;\r\n    }\r\n\r\n    handleClick(p: number, r: number) {\r\n        console.log(\"Call back player: \" + p + \" round: \" + r);\r\n        var set = this.state.YatzySets[p];\r\n        var round = set.round(r);\r\n        const newState = {\r\n            YatzySets: this.state.YatzySets,\r\n            currentSet: p,\r\n            currentRound: r,\r\n            names: this.state.names\r\n\r\n        } as State;\r\n        this.setState(newState);\r\n        this.storeBoard(newState);\r\n    }\r\n\r\n    rowFunc(round: number): (p: number) => void {\r\n        return (player) => this.handleClick(player, round);\r\n    }\r\n\r\n    rowRounds(i: number): Round[] {\r\n        let result = this.state.YatzySets.map(ys => ys.round(i));\r\n        return result;\r\n    }\r\n\r\n    addDice(i: number) {\r\n        const currentRound = this.state.YatzySets[this.state.currentSet].round(this.state.currentRound);  \r\n        if (currentRound.canBeNext(i)) {\r\n            currentRound.add(i);\r\n            this.setState(this.state);\r\n            this.storeBoard(this.state);\r\n        }\r\n    }\r\n\r\n    removeDice() {\r\n        console.log(\"Back\");\r\n        const currentRound = this.state.YatzySets[this.state.currentSet].round(this.state.currentRound);  \r\n        currentRound.back();\r\n        this.setState(this.state);\r\n        this.storeBoard(this.state);\r\n    }\r\n\r\n    scratch() {\r\n        console.log(\"Scratch\");\r\n        const currentRound = this.state.YatzySets[this.state.currentSet].round(this.state.currentRound);  \r\n        currentRound.scratch();\r\n        this.setState(this.state);\r\n        this.storeBoard(this.state);\r\n    }\r\n\r\n    clearBoard() {\r\n        console.log(\"Clear board\");\r\n        const sets = this.clearSets();\r\n        const newState = {\r\n            YatzySets: sets,\r\n            currentSet: 0,\r\n            currentRound: 0,\r\n            names: this.state.names\r\n        } as State;\r\n        this.setState(newState);\r\n        this.storeBoard(newState);\r\n    }\r\n\r\n    updateName(name: string, index: number) {\r\n        this.state.names[index] = name;\r\n        this.setState(this.state);\r\n        this.storeBoard(this.state);\r\n    }\r\n\r\n    storeBoard(state: State) {\r\n        console.log(\"Store board\");\r\n\r\n        const sets = state.YatzySets;\r\n\r\n        const rounds = sets.map(ys => ys.allCubes());\r\n        const statedto = {} as GameState;\r\n        statedto.names = state.names;\r\n        statedto.rounds = rounds;\r\n        statedto.currentPlayer = state.currentSet;\r\n        statedto.currentRound = state.currentRound;\r\n        StoreRemoteState(statedto);\r\n    }\r\n\r\n\r\n    terning(i: number) {\r\n        return (\r\n            <button className=\"terning\"\r\n                disabled={!this.state.YatzySets[this.state.currentSet].round(this.state.currentRound).canBeNext(i)}\r\n                onClick={() => this.addDice(i)}>,\r\n                {i}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    next() {\r\n        const currentSet = this.state.currentSet;  \r\n        const nextSet = currentSet % 6;\r\n        this.setState({\r\n            YatzySets: this.state.YatzySets,\r\n            currentSet: nextSet,\r\n            currentRound: 0\r\n        });\r\n    }\r\n\r\n    række(round: number, slags: string): ReactElement {\r\n        return <Række Slags={slags}\r\n            onClick={this.rowFunc(round)} rounds={this.rowRounds(round)}\r\n            available={this.state.YatzySets[this.state.currentSet].round(round).blank()}\r\n            currentRound={this.state.YatzySets[this.state.currentSet].round(this.state.currentRound)} />;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ShortCuts diceClick={(i: number) => { this.addDice(i) }}\r\n                    // diceEnabled={i => this.state.currentRound.canBeNext(i)}\r\n                    backspace={() => this.removeDice()}\r\n                    // scratch={() => this.scratch()}\r\n                    // clear={() => this.clearBoard()}\r\n                    next={() => this.next()}\r\n                />\r\n\r\n                <TableContainer component={Paper}>\r\n                    <Table size=\"small\" sx={{ minWidth: 200 }} aria-label=\"simple table\">\r\n                        <Navne valid={this.state.YatzySets.map(ys => ys.verify())}\r\n                            names={this.state.names}\r\n                            updateName={(name, index) => this.updateName(name, index)} />\r\n                        <TableBody>\r\n                            {this.række(0, \"1\")}\r\n                            {this.række(1, \"2\")}\r\n                            {this.række(2, \"3\")}\r\n                            {this.række(3, \"4\")}\r\n                            {this.række(4, \"5\")}\r\n                            {this.række(5, \"6\")}\r\n                            <LæsRække Slags=\"Bonus\" Tal={this.state.YatzySets.map(ys => ys.bonus())}></LæsRække>\r\n                            {this.række(6, \"1 par\")}\r\n                            {this.række(7, \"2 par\")}\r\n                            {this.række(8, \"3 par\")}\r\n                            {this.række(9, \"3 ens\")}\r\n                            {this.række(10, \"4 ens\")}\r\n                            {this.række(11, \"2 x 3 ens\")}\r\n                            {this.række(12, \"Lav\")}\r\n                            {this.række(13, \"Høj\")}\r\n                            {this.række(14, \"Cameron\")}\r\n                            {this.række(15, \"Hus\")}\r\n                            {this.række(16, \"Chance\")}\r\n                            {this.række(17, \"Yatzy\")}\r\n                            <LæsRække Slags=\"Total\" Tal={this.state.YatzySets.map(ys => ys.score())}></LæsRække>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div className=\"nederst\">\r\n                    <div className=\"slag\">\r\n                        {this.state.YatzySets[this.state.currentSet].round(this.state.currentRound).toArray()}\r\n                    </div>\r\n\r\n                </div>\r\n                <ButtonBar diceClick={(i: number) => { this.addDice(i) }}\r\n                    diceEnabled={i => this.state.YatzySets[this.state.currentSet].round(this.state.currentRound).canBeNext(i)}\r\n                    backspace={() => this.removeDice()}\r\n                    scratch={() => this.scratch()}\r\n                    clear={() => this.clearBoard()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Game } from './Game';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}