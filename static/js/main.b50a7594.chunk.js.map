{"version":3,"sources":["YatzySet.ts","Felt.tsx","Række.tsx","ResultatFelt.tsx","LæsRække.tsx","Navne.tsx","Clear.tsx","ButtonBar.tsx","ShortCuts.tsx","Game.tsx","index.tsx"],"names":["YatzySet","rounds","left","right","r","UpperRound","push","PatternRound","FixedRound","Round","this","l","p","roundsPlayed","console","log","playedRounds","length","i","filter","round","blank","reduce","sum","score","bonus","isTopSet","slice","every","map","cubes","scratched","scrathed","index","element","scratch","forEach","cube","add","c","dice","pop","clear","join","toString","v","kind","pattern","bonusPoints","Array","fill","isAPreviousValue","d","includes","set","Felt","props","TableCell","onClick","sx","paddingX","paddingY","minWidth","fontSize","bgcolor","CurrentRound","align","Række","TableRow","selected","some","currentRound","color","available","Slags","FeltI","ResultatFelt","Value","LæsRække","LæsFeltI","Tal","Navn","paddingTop","maxHeight","TextField","variant","defaultValue","error","valid","helperText","size","onFocus","event","target","select","inputProps","style","padding","Navne","TableHead","Clear","React","open","setOpen","handleClose","MenuItem","ListItemIcon","Dialog","onClose","DialogTitle","DialogActions","Button","autoFocus","screenfull","require","ButtonBar","useState","anchorEl","setAnchorEl","Boolean","AppBar","position","top","bottom","Toolbar","disableGutters","Box","flexGrow","ButtonGroup","Dice","IconButton","edge","backspace","currentTarget","id","MenuListProps","isEnabled","toggle","fontFamily","diceClick","disabled","diceEnabled","ShortCuts","handlers","ONE","preventDefault","TWO","THREE","FOUR","FIVE","SIX","BACK_SPACE","NEXT","next","keyMap","Game","sets","clearSets","storedStateJson","localStorage","getItem","allRounds","JSON","parse","setCubes","state","YatzySets","currentSet","setRight","setLeft","setState","player","handleClick","ys","canBeNext","storeBoard","back","setItem","stringify","allCubes","className","addDice","nextSet","find","slags","rowFunc","rowRounds","removeDice","TableContainer","component","Paper","Table","verify","TableBody","række","toArray","clearBoard","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b50a7594.chunk.js","sourcesContent":["export class YatzySet {\r\n    rounds: Round[];\r\n    left: YatzySet | null;\r\n    right: YatzySet | null;\r\n\r\n    constructor() {\r\n        let r: Round[] = [new UpperRound(1), new UpperRound(2), new UpperRound(3), new UpperRound(4), new UpperRound(5), new UpperRound(6)];\r\n        r.push(new PatternRound([2]));\r\n        r.push(new PatternRound([2, 2]));\r\n        r.push(new PatternRound([2, 2, 2]));\r\n        r.push(new PatternRound([3]));\r\n        r.push(new PatternRound([4]));\r\n        r.push(new PatternRound([3, 3]));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5], 0));\r\n        r.push(new FixedRound([2, 3, 4, 5, 6], 0));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5, 6], 9));\r\n        r.push(new PatternRound([3, 2]));\r\n        r.push(new Round());\r\n        r.push(new PatternRound([6], 100));\r\n        this.rounds = r;\r\n        this.left = null;\r\n        this.right = null;\r\n\r\n    }\r\n\r\n    setLeft(l: YatzySet) {\r\n        this.left = l;\r\n    }\r\n\r\n    setRight(r: YatzySet) {\r\n        this.right = r;\r\n    }\r\n\r\n\r\n    verify() {\r\n        let p = this.roundsPlayed();\r\n        if (this.left !== null && p !== 0) {\r\n            console.log(\"Left: \" + this.left);\r\n            let l = this.left.roundsPlayed();\r\n            console.log(\"p: \" + p + \" l: \" + l);\r\n            if (l !== p && l !== p + 1) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.right !== null) {\r\n            let r = this.right.roundsPlayed();\r\n            if (r !== 0) {\r\n                if (r !== p - 1 && r !== p) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    roundsPlayed() {\r\n        return this.playedRounds().length;\r\n    }\r\n\r\n    round(i: number): Round {\r\n        return this.rounds[i];\r\n    }\r\n\r\n    score(): number {\r\n        return this.rounds.filter(round => !round.blank()).reduce((sum, round) => sum + round.score(), 0) + this.bonus();\r\n    }\r\n\r\n    bonus(): number {\r\n        return this.isTopSet() && this.rounds.slice(0, 6).reduce((sum, r) => sum + r.score(), 0) >= 0 ? 50 : 0;\r\n    }\r\n\r\n    isTopSet(): boolean {\r\n        const ts = this.rounds.slice(0, 6).every(round => !round.blank());\r\n        return ts;\r\n    }\r\n\r\n    playedRounds(): Round[] {\r\n        return this.rounds.filter(round => !round.blank());\r\n    }\r\n\r\n    allCubes(): RoundState[] {\r\n        return this.rounds.map(r => {\r\n            var state: RoundState = {\r\n                cubes: r.cubes,\r\n                scratched: r.scrathed\r\n\r\n            };\r\n            return state;\r\n        });\r\n    }\r\n\r\n    setCubes(rounds: RoundState[]) {\r\n        for (let index = 0; index < rounds.length; index++) {\r\n            const element = rounds[index];\r\n            if (element.scratched) {\r\n                this.rounds[index].scratch();\r\n            } else {\r\n                element.cubes.forEach(cube => {\r\n                    this.rounds[index].add(cube);\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport interface RoundState {\r\n    cubes: number[];\r\n    scratched: boolean;\r\n}\r\n\r\nexport class Round {\r\n    cubes: number[];\r\n    scrathed: boolean;\r\n    constructor() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    score(): number {\r\n        if (this.scrathed) {\r\n            return 0;\r\n        }\r\n        return this.cubes.reduce((sum, c) => sum + c, 0);\r\n    }\r\n\r\n    blank(): boolean {\r\n        return this.cubes.length === 0 && !this.scrathed;\r\n    }\r\n\r\n    add(dice: number) {\r\n        this.cubes.push(dice);\r\n        this.scrathed = false;\r\n\r\n    }\r\n\r\n    scratch() {\r\n        this.cubes = [];\r\n        this.scrathed = true;\r\n    }\r\n\r\n    clear() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    back() {\r\n        this.cubes.pop();\r\n        if (this.scrathed) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    toArray(): string {\r\n        return this.cubes.join(\"\");\r\n    }\r\n\r\n    toString(): string {\r\n        if (this.scrathed) {\r\n            return \"X\";\r\n        }\r\n        if (this.blank()) {\r\n            return \"\\xa0\";\r\n        }\r\n        return this.score().toString();\r\n    }\r\n\r\n    bonus(): number {\r\n        return 0;\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return this.cubes.length < 6;\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return this.cubes.length > 0 && this.cubes.length < 6;\r\n    }\r\n}\r\n\r\nclass UpperRound extends Round {\r\n    kind: number;\r\n    constructor(kind: number) {\r\n        super();\r\n        this.kind = kind;\r\n    }\r\n\r\n    add(dice: number) {\r\n        if (dice === this.kind) {\r\n            super.add(dice)\r\n        }\r\n    }\r\n\r\n    score(): number {\r\n        return super.score() - 4 * this.kind\r\n    }\r\n\r\n    bouns(): number {\r\n        return this.score()\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return super.canBeNext(v) && v === this.kind;\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nclass PatternRound extends Round {\r\n    pattern: number[];\r\n    kind: number[];\r\n    bonusPoints: number;\r\n    index: number;\r\n    constructor(pattern: number[], bonus: number = 0) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.kind = Array(pattern.length).fill(0);\r\n        this.bonusPoints = bonus;\r\n        this.index = 0;\r\n    }\r\n\r\n    add(dice: number) {\r\n        console.log(\"Adding: \" + dice);\r\n        if (this.isAPreviousValue(dice) || this.index >= this.pattern.length) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.pattern[this.index]; i++) {\r\n            super.add(dice);\r\n        }\r\n        this.kind[this.index] = dice;\r\n        this.index += 1\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return super.canBeNext(v) && !this.isAPreviousValue(v) && this.index < this.pattern.length\r\n    }\r\n\r\n    isAPreviousValue(d: number): boolean {\r\n        return this.kind.includes(d);\r\n    }\r\n\r\n    clear() {\r\n        super.clear()\r\n        this.kind = Array(this.pattern.length).fill(0);\r\n        this.index = 0\r\n    }\r\n\r\n    back() {\r\n        if (this.index === 0) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this.index -= 1;\r\n        this.kind[this.index] = 0;\r\n        for (let i = 0; i < this.pattern[this.index]; i++) {\r\n            super.back();\r\n        }\r\n    }\r\n\r\n    score(): number {\r\n        return (this.index === this.pattern.length ? this.bonusPoints : 0) + super.score();\r\n    }\r\n\r\n    scratch() {\r\n        this.clear()\r\n        super.scratch()\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return this.index !== 0 && this.index < this.pattern.length\r\n    }\r\n}\r\n\r\nclass FixedRound extends Round {\r\n    bonusPoints: number;\r\n    set: boolean;\r\n    pattern: number[];\r\n    constructor(pattern: number[], bonusPoints: number) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.bonusPoints = bonusPoints;\r\n        this.set = false;\r\n\r\n    }\r\n\r\n    add(dice: number) {\r\n        if (!this.pattern.includes(dice) || this.set) {\r\n            return\r\n        }\r\n        this.pattern.forEach(d => super.add(d));\r\n        this.set = true;\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return !this.set && this.pattern.includes(v);\r\n    }\r\n\r\n\r\n    clear() {\r\n        super.clear();\r\n        this.set = false;\r\n    }\r\n\r\n    back() {\r\n        this.pattern.forEach(d => super.back());\r\n        this.set = false;\r\n    }\r\n\r\n    scratch() {\r\n        super.scratch();\r\n        this.set = false;\r\n    }\r\n\r\n    score(): number {\r\n        return (this.set ? this.bonusPoints : 0) + super.score();\r\n    }\r\n\r\n    ssIncomplete(): boolean {\r\n        return false;\r\n    }\r\n\r\n}","import { TableCell } from '@mui/material';\r\nimport { Round } from './YatzySet'\r\n\r\nexport function Felt(props: Props) {\r\n    return (\r\n        <TableCell \r\n            onClick={props.onClick} \r\n            sx={{paddingX:0, paddingY:0, minWidth: \"10px\", fontSize: \"2.2vh\", bgcolor: props.Round === props.CurrentRound ? \"primary.main\" : null}}\r\n            align='center'\r\n            >\r\n            {props.Round?.toString()+\" \"}\r\n        </TableCell>\r\n    );\r\n}\r\n\r\n\r\ninterface Props {\r\n    onClick: () => void;\r\n    Round: Round;\r\n    CurrentRound: Round;\r\n  }\r\n\r\n","import { TableCell, TableRow } from '@mui/material';\r\nimport React from 'react';\r\nimport { Felt } from './Felt'\r\nimport { Round } from './YatzySet'\r\n\r\nexport function Række(props: Props) {\r\n    return (\r\n        <TableRow selected = {props.rounds.some(r => r === props.currentRound)}\r\n                 sx={{}}\r\n        >\r\n            <TableCell align=\"left\"\r\n                sx={{ color: props.available ? 'text.primary' : 'ghostwhite', \r\n                      paddingY:\"0px\",\r\n                      fontSize: \"2.3vh\"\r\n            }}\r\n            >\r\n                {props.Slags}\r\n            </TableCell>\r\n            {FeltI(0 , props)}\r\n            {FeltI(1 , props)}\r\n            {FeltI(2 , props)}\r\n            {FeltI(3 , props)}\r\n            {FeltI(4 , props)}\r\n            {FeltI(5 , props)}\r\n\r\n\r\n        </TableRow>\r\n\r\n    );\r\n}\r\n\r\nfunction FeltI(i: number, props: Props) {\r\n    return (\r\n        <Felt onClick={() => props.onClick(i)}\r\n            Round={props.rounds[i]}\r\n            CurrentRound={props.currentRound} />\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    onClick: (i: number) => void;\r\n    rounds: Round[];\r\n    Slags: string;\r\n    available: boolean;\r\n    currentRound: Round;\r\n}\r\n","import { TableCell } from '@mui/material';\r\nexport function ResultatFelt(props: Props) {\r\n    return (\r\n            <TableCell sx={{paddingX:0, paddingY:0, minWidth: \"10px\", fontSize: \"2.2vh\"}}\r\n                    align='center'>\r\n                {props.Value}\r\n            </TableCell>\r\n    );\r\n}\r\n\r\n\r\ninterface Props {\r\n    Value: string;\r\n  }\r\n\r\n","import {ResultatFelt} from './ResultatFelt'\r\nimport { TableCell, TableRow } from '@mui/material';\r\n\r\nexport function LæsRække(props: Props) {\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell align=\"left\"\r\n             sx={{ paddingY:\"2px\", fontSize: \"2.2vh\"}} \r\n            >\r\n                {props.Slags}\r\n            </TableCell>\r\n            {LæsFeltI(0 , props)}\r\n            {LæsFeltI(1 , props)}\r\n            {LæsFeltI(2 , props)}\r\n            {LæsFeltI(3 , props)}\r\n            {LæsFeltI(4 , props)}\r\n            {LæsFeltI(5 , props)}\r\n\r\n\r\n        </TableRow>\r\n\r\n    );\r\n}\r\n\r\nfunction LæsFeltI(i: number, props: Props){\r\n    return <ResultatFelt Value={props.Tal[i].toString()} />;\r\n\r\n}\r\n\r\ninterface Props {\r\n    Slags: string;\r\n    Tal: number[];\r\n  }\r\n","import { TableCell, TableHead, TableRow, TextField } from '@mui/material';\r\nimport React from 'react';\r\n\r\n\r\ninterface Props {\r\n    valid: boolean[];\r\n}\r\n\r\nfunction Navn(i: number, props: Props) {\r\n    return <TableCell sx={{paddingX:\"2px\", paddingY:\"px\", minWidth: \"10px\", paddingTop: 0, maxHeight: \"2vh\"}}>\r\n        <TextField\r\n            variant=\"filled\"\r\n            defaultValue={\"Spiller \" + (i + 1)}\r\n            error={!props.valid[i]}\r\n            helperText={!props.valid[i] ? \"FEJL\" : \"\"}\r\n            size=\"small\"\r\n            onFocus={event => {\r\n                event.target.select();\r\n              }}\r\n              inputProps={{\r\n                style: {\r\n                  padding: 5\r\n                }\r\n             }}\r\n\r\n        />\r\n    </TableCell>\r\n\r\n}\r\n\r\nexport function Navne(props: Props) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell sx={{paddingX:\"1px\", paddingY:\"0px\", minWidth: \"10px\", maxHeight: \"1vh\"}}/>\r\n                {Navn(0, props)}\r\n                {Navn(1, props)}\r\n                {Navn(2, props)}\r\n                {Navn(3, props)}\r\n                {Navn(4, props)}\r\n                {Navn(5, props)}\r\n            </TableRow>\r\n        </TableHead >\r\n\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { ListItemIcon, MenuItem } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\ninterface Props {\r\n  clear: () => void;\r\n}\r\n\r\nexport default function Clear(props: Props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem onClick={handleClickOpen}>\r\n        <ListItemIcon>\r\n          <DeleteIcon fontSize=\"large\" />\r\n        </ListItemIcon>\r\n      </MenuItem>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle >\r\n          {\"Slet spil?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Nåhr, nej</Button>\r\n          <Button onClick={() => {props.clear(); handleClose()}} autoFocus>Ægte!</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Box from '@mui/material/Box';\r\nimport BackspaceIcon from '@mui/icons-material/Backspace';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Button from '@mui/material/Button';\r\nimport { ButtonGroup, ListItemIcon } from '@mui/material';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\r\nimport Clear from './Clear';\r\n\r\nconst size = \"min(6vw, 1cm)\"\r\nconst screenfull = require('screenfull');\r\n\r\nexport function ButtonBar(props: Props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n\r\n        \r\n    };\r\n\r\n    // enabling fullscreen has to be done after some user input\r\n    const toggleFullScreen = () => {\r\n        if (screenfull.isEnabled) {\r\n            screenfull.toggle();\r\n        }\r\n    };\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\r\n            <Toolbar disableGutters={true}>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <ButtonGroup variant=\"text\" size=\"small\">\r\n                    {Dice(1, props)}\r\n                    {Dice(2, props)}\r\n                    {Dice(3, props)}\r\n                    {Dice(4, props)}\r\n                    {Dice(5, props)}\r\n                    {Dice(6, props)}\r\n                    <IconButton color=\"inherit\" edge='start' onClick={() => props.scratch()}>\r\n                        <ClearIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                    <IconButton color=\"inherit\" edge='start' onClick={() => props.backspace()}>\r\n                        <BackspaceIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                    <IconButton color=\"inherit\" edge='start' onClick={handleClick}>\r\n                        <MenuIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                </ButtonGroup>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                   <Clear clear={props.clear}/>\r\n                    <MenuItem onClick={() => {toggleFullScreen(); handleClose() }}>\r\n                        <ListItemIcon>\r\n                            <FullscreenIcon fontSize=\"large\" />\r\n                        </ListItemIcon>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\n\r\nfunction Dice(i: number, props: Props) {\r\n    return (<Button\r\n        variant=\"contained\"\r\n        sx={{ fontSize: size, fontFamily: 'Mogens Dice' }}\r\n        onClick={() => props.diceClick(i)}\r\n        disabled={!props.diceEnabled(i)}\r\n        size='small'\r\n    >\r\n        {i}\r\n    </Button>);\r\n}\r\n\r\ninterface Props {\r\n    diceClick: (i: number) => void;\r\n    diceEnabled: (i: number) => boolean;\r\n    backspace: () => void;\r\n    scratch: () => void;\r\n    clear: () => void;\r\n}\r\n","import React from 'react';\r\nimport { GlobalHotKeys } from 'react-hotkeys';\r\n\r\nexport function ShortCuts(props: Props) {\r\n    const keyMap = {\r\n        ONE: \"1\",\r\n        TWO: \"2\",\r\n        THREE: \"3\",\r\n        FOUR: \"4\",\r\n        FIVE: \"5\",\r\n        SIX: \"6\",\r\n        BACK_SPACE: \"del backspace\",\r\n        NEXT: \"space ctrl+m\"\r\n    };\r\n\r\n    const one : (keyEvent?: KeyboardEvent) => void = (event) => {\r\n        console.log(\"One\");\r\n        if (event) {\r\n            event.preventDefault();\r\n          }\r\n        props.diceClick(1);\r\n    };\r\n    const two = () => {\r\n        console.log(\"Two\");\r\n\r\n        props.diceClick(2);\r\n    };\r\n    const three = () => {\r\n        props.diceClick(3);\r\n    };\r\n    const four = () => {\r\n        props.diceClick(4);\r\n    };\r\n    const five = () => {\r\n        props.diceClick(5);\r\n    };\r\n    const six = () => {\r\n        props.diceClick(6);\r\n    };\r\n    const backspace = () => {\r\n        props.backspace();\r\n    };\r\n    const next = () => {\r\n        console.log(\"Next\");\r\n        props.next();\r\n    };\r\n\r\n    const handlers = {\r\n        ONE: one,\r\n        TWO: two,\r\n        THREE: three,\r\n        FOUR: four,\r\n        FIVE: five,\r\n        SIX: six,\r\n        BACK_SPACE: backspace,\r\n        NEXT: next\r\n\r\n    };\r\n    return (\r\n        <GlobalHotKeys keyMap={keyMap} handlers={handlers} />)\r\n}\r\n\r\ninterface Props {\r\n    diceClick: (i: number) => void;\r\n    // diceEnabled: (i: number) => boolean;\r\n    backspace: () => void;\r\n    // scratch: () => void;\r\n    // clear: () => void;\r\n    next: () => void;\r\n}","import React from 'react';\r\nimport { Round, YatzySet, RoundState } from './YatzySet';\r\nimport { Række } from './Række';\r\nimport { LæsRække } from './LæsRække';\r\nimport { Navne } from \"./Navne\";\r\nimport { ReactElement } from 'react';\r\nimport { ButtonBar } from './ButtonBar';\r\nimport { Paper, Table, TableBody, TableContainer } from '@mui/material';\r\nimport { ShortCuts } from './ShortCuts';\r\n\r\n\r\n\r\ninterface State {\r\n    YatzySets: YatzySet[];\r\n    currentSet: YatzySet;\r\n    currentRound: Round;\r\n}\r\n\r\n\r\nexport class Game extends React.Component<{}, State> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        let sets = this.clearSets();\r\n        let storedStateJson = localStorage.getItem('MogensYatzy');\r\n        if (storedStateJson !== null) {\r\n            var allRounds: RoundState[][] = JSON.parse(storedStateJson);\r\n\r\n            console.log(\"Board loaded\");\r\n\r\n            for (let index = 0; index < allRounds.length; index++) {\r\n                const element = allRounds[index];\r\n                sets[index].setCubes(element);\r\n            }\r\n\r\n        }\r\n        this.state = {\r\n            YatzySets: sets,\r\n            currentSet: sets[0],\r\n            currentRound: sets[0].round(0),\r\n        };\r\n    }\r\n\r\n    clearSets(): YatzySet[] {\r\n        let sets = Array(6).fill(null).map(() => new YatzySet());\r\n        for (let index = 1; index < sets.length; index++) {\r\n            const left = sets[index - 1];\r\n            const right = sets[index];\r\n            left.setRight(right);\r\n            right.setLeft(left);\r\n        }\r\n        return sets;\r\n    }\r\n\r\n    handleClick(p: number, r: number) {\r\n        console.log(\"Call back player: \" + p + \" round: \" + r);\r\n        var set = this.state.YatzySets[p];\r\n        var round = set.round(r);\r\n        this.setState({\r\n            YatzySets: this.state.YatzySets,\r\n            currentSet: set,\r\n            currentRound: round\r\n        });\r\n\r\n    }\r\n\r\n    rowFunc(round: number): (p: number) => void {\r\n        return (player) => this.handleClick(player, round);\r\n    }\r\n\r\n    rowRounds(i: number): Round[] {\r\n        let result = this.state.YatzySets.map(ys => ys.round(i));\r\n        return result;\r\n    }\r\n\r\n    addDice(i: number) {\r\n        if (this.state.currentRound.canBeNext(i)) {\r\n            this.state.currentRound.add(i);\r\n            this.setState(this.state);\r\n            this.storeBoard();\r\n        }\r\n    }\r\n\r\n    removeDice() {\r\n        console.log(\"Back\");\r\n        this.state.currentRound.back();\r\n        this.setState(this.state);\r\n        this.storeBoard();\r\n    }\r\n\r\n    scratch() {\r\n        console.log(\"Scratch\");\r\n        this.state.currentRound.scratch();\r\n        this.setState(this.state);\r\n        this.storeBoard();\r\n    }\r\n\r\n    clearBoard() {\r\n        console.log(\"Clear board\");\r\n        const sets = this.clearSets();\r\n        this.setState({\r\n            YatzySets: sets,\r\n            currentSet: sets[0],\r\n            currentRound: sets[0].round(0),\r\n        });\r\n        this.storeBoard(sets);\r\n\r\n    }\r\n\r\n    storeBoard(sets: YatzySet[] | null = null) {\r\n        console.log(\"Store board\");\r\n        if (sets == null) {\r\n            sets = this.state.YatzySets;\r\n        }\r\n        localStorage.setItem(\"MogensYatzy\", JSON.stringify(sets.map(ys => ys.allCubes())));\r\n    }\r\n\r\n\r\n    terning(i: number) {\r\n        return (\r\n            <button className=\"terning\"\r\n                disabled={!this.state.currentRound.canBeNext(i)}\r\n                onClick={() => this.addDice(i)}>\r\n                {i}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    next(){\r\n        const nextSet = this.state.currentSet.right ?? this.state.YatzySets[0];\r\n        this.setState({\r\n            YatzySets: this.state.YatzySets,\r\n            currentSet: nextSet,\r\n            currentRound: nextSet.rounds.find(r => r.blank()) ?? nextSet.rounds[0]\r\n        });\r\n    }\r\n\r\n    række(round: number, slags: string): ReactElement {\r\n        return <Række Slags={slags}\r\n            onClick={this.rowFunc(round)} rounds={this.rowRounds(round)}\r\n            available={this.state.currentSet.rounds[round].blank()}\r\n            currentRound={this.state.currentRound} />;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ShortCuts diceClick={(i: number) => { this.addDice(i) }}\r\n                    // diceEnabled={i => this.state.currentRound.canBeNext(i)}\r\n                    backspace={() => this.removeDice()}\r\n                // scratch={() => this.scratch()}\r\n                // clear={() => this.clearBoard()}\r\n                next={() => this.next()}\r\n                />\r\n\r\n                <TableContainer component={Paper}>\r\n                    <Table size=\"small\" sx={{ minWidth: 200 }} aria-label=\"simple table\">\r\n                        <Navne valid={this.state.YatzySets.map(ys => ys.verify())} />\r\n                        <TableBody>\r\n                            {this.række(0, \"1\")}\r\n                            {this.række(1, \"2\")}\r\n                            {this.række(2, \"3\")}\r\n                            {this.række(3, \"4\")}\r\n                            {this.række(4, \"5\")}\r\n                            {this.række(5, \"6\")}\r\n                            <LæsRække Slags=\"Bonus\" Tal={this.state.YatzySets.map(ys => ys.bonus())}></LæsRække>\r\n                            {this.række(6, \"1 par\")}\r\n                            {this.række(7, \"2 par\")}\r\n                            {this.række(8, \"3 par\")}\r\n                            {this.række(9, \"3 ens\")}\r\n                            {this.række(10, \"4 ens\")}\r\n                            {this.række(11, \"2 x 3 ens\")}\r\n                            {this.række(12, \"Lav\")}\r\n                            {this.række(13, \"Høj\")}\r\n                            {this.række(14, \"Cameron\")}\r\n                            {this.række(15, \"Hus\")}\r\n                            {this.række(16, \"Chance\")}\r\n                            {this.række(17, \"Yatzy\")}\r\n                            <LæsRække Slags=\"Total\" Tal={this.state.YatzySets.map(ys => ys.score())}></LæsRække>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div className=\"nederst\">\r\n                    <div className=\"slag\">\r\n                        {this.state.currentRound.toArray()}\r\n                    </div>\r\n\r\n                </div>\r\n                <ButtonBar diceClick={(i: number) => { this.addDice(i) }}\r\n                    diceEnabled={i => this.state.currentRound.canBeNext(i)}\r\n                    backspace={() => this.removeDice()}\r\n                    scratch={() => this.scratch()}\r\n                    clear={() => this.clearBoard()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Game } from './Game';\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}