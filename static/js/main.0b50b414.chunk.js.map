{"version":3,"sources":["YatzySet.ts","Felt.tsx","Række.tsx","ResultatFelt.tsx","LæsRække.tsx","Navne.tsx","Mellemrum.tsx","Menu.tsx","Board.tsx","Game.tsx","index.tsx"],"names":["YatzySet","rounds","left","right","r","UpperRound","push","PatternRound","FixedRound","Round","this","l","p","roundsPlayed","console","log","playedRounds","length","i","filter","round","blank","reduce","sum","score","bonus","isTopSet","slice","every","map","cubes","scratched","scrathed","index","element","scratch","forEach","cube","add","c","dice","pop","clear","join","toString","v","kind","pattern","bonusPoints","Array","fill","isAPreviousValue","d","includes","set","Felt","props","onClick","className","CurrentRound","Række","available","Slags","FeltI","currentRound","ResultatFelt","Value","LæsRække","LæsFeltI","Tal","Navne","type","valid","Mellemrum","screenfull","require","Menu","SpeedDial","ariaLabel","sx","position","bottom","icon","SpeedDialIcon","SpeedDialAction","isEnabled","toggle","tooltipTitle","window","confirm","Board","sets","clearSets","storedStateJson","localStorage","getItem","allRounds","JSON","parse","setCubes","state","YatzySets","currentSet","setRight","setLeft","setState","player","handleClick","ys","storeBoard","back","setItem","stringify","allCubes","disabled","canBeNext","addDice","slags","rowFunc","rowRounds","verify","række","toArray","terning","removeDice","clearBoard","React","Component","Game","document","title","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0b50b414.chunk.js","sourcesContent":["export class YatzySet {\r\n    rounds: Round[];\r\n    left: YatzySet | null;\r\n    right: YatzySet | null;\r\n\r\n    constructor() {\r\n        let r: Round[] = [new UpperRound(1), new UpperRound(2), new UpperRound(3), new UpperRound(4), new UpperRound(5), new UpperRound(6)];\r\n        r.push(new PatternRound([2]));\r\n        r.push(new PatternRound([2, 2]));\r\n        r.push(new PatternRound([2, 2, 2]));\r\n        r.push(new PatternRound([3]));\r\n        r.push(new PatternRound([4]));\r\n        r.push(new PatternRound([3, 3]));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5], 0));\r\n        r.push(new FixedRound([2, 3, 4, 5, 6], 0));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5, 6], 9));\r\n        r.push(new PatternRound([3, 2]));\r\n        r.push(new Round());\r\n        r.push(new PatternRound([6], 100));\r\n        this.rounds = r;\r\n        this.left = null;\r\n        this.right = null;\r\n\r\n    }\r\n\r\n    setLeft(l: YatzySet) {\r\n        this.left = l;\r\n    }\r\n\r\n    setRight(r: YatzySet) {\r\n        this.right = r;\r\n    }\r\n\r\n\r\n    verify() {\r\n        let p = this.roundsPlayed();\r\n        if (this.left !== null && p !== 0) {\r\n            console.log(\"Left: \" + this.left);\r\n            let l = this.left.roundsPlayed();\r\n            console.log(\"p: \" + p + \" l: \" + l);\r\n            if (l !== p && l !== p + 1) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.right !== null) {\r\n            let r = this.right.roundsPlayed();\r\n            if (r !== 0) {\r\n                if (r !== p - 1 && r !== p) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    roundsPlayed() {\r\n        return this.playedRounds().length;\r\n    }\r\n\r\n    round(i: number): Round {\r\n        return this.rounds[i];\r\n    }\r\n\r\n    score(): number {\r\n        return this.rounds.filter(round => !round.blank()).reduce((sum, round) => sum + round.score(), 0) + this.bonus();\r\n    }\r\n\r\n    bonus(): number {\r\n        return this.isTopSet() && this.rounds.slice(0, 6).reduce((sum, r) => sum + r.score(), 0) >= 0 ? 50 : 0;\r\n    }\r\n\r\n    isTopSet(): boolean {\r\n        const ts = this.rounds.slice(0, 6).every(round => !round.blank());\r\n        return ts;\r\n    }\r\n\r\n    playedRounds(): Round[] {\r\n        return this.rounds.filter(round => !round.blank());\r\n    }\r\n\r\n    allCubes(): RoundState[] {\r\n        return this.rounds.map(r => {\r\n            var state: RoundState = {\r\n                cubes: r.cubes,\r\n                scratched: r.scrathed\r\n\r\n            };\r\n            return state;\r\n        });\r\n    }\r\n\r\n    setCubes(rounds: RoundState[]) {\r\n        for (let index = 0; index < rounds.length; index++) {\r\n            const element = rounds[index];\r\n            if (element.scratched) {\r\n                this.rounds[index].scratch();\r\n            } else {\r\n                element.cubes.forEach(cube => {\r\n                    this.rounds[index].add(cube);\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport interface RoundState {\r\n    cubes: number[];\r\n    scratched: boolean;\r\n}\r\n\r\nexport class Round {\r\n    cubes: number[];\r\n    scrathed: boolean;\r\n    constructor() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    score(): number {\r\n        if (this.scrathed) {\r\n            return 0;\r\n        }\r\n        return this.cubes.reduce((sum, c) => sum + c, 0);\r\n    }\r\n\r\n    blank(): boolean {\r\n        return this.cubes.length === 0 && !this.scrathed;\r\n    }\r\n\r\n    add(dice: number) {\r\n        this.cubes.push(dice);\r\n        this.scrathed = false;\r\n\r\n    }\r\n\r\n    scratch() {\r\n        this.cubes = [];\r\n        this.scrathed = true;\r\n    }\r\n\r\n    clear() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    back() {\r\n        this.cubes.pop();\r\n        if (this.scrathed) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    toArray(): string {\r\n        return this.cubes.join(\"\");\r\n    }\r\n\r\n    toString(): string {\r\n        if (this.scrathed) {\r\n            return \"X\";\r\n        }\r\n        if (this.blank()) {\r\n            return \"\";\r\n        }\r\n        return this.score().toString();\r\n    }\r\n\r\n    bonus(): number {\r\n        return 0;\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return this.cubes.length < 6;\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return this.cubes.length > 0 && this.cubes.length < 6;\r\n    }\r\n}\r\n\r\nclass UpperRound extends Round {\r\n    kind: number;\r\n    constructor(kind: number) {\r\n        super();\r\n        this.kind = kind;\r\n    }\r\n\r\n    add(dice: number) {\r\n        if (dice === this.kind) {\r\n            super.add(dice)\r\n        }\r\n    }\r\n\r\n    score(): number {\r\n        return super.score() - 4 * this.kind\r\n    }\r\n\r\n    bouns(): number {\r\n        return this.score()\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return super.canBeNext(v) && v === this.kind;\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nclass PatternRound extends Round {\r\n    pattern: number[];\r\n    kind: number[];\r\n    bonusPoints: number;\r\n    index: number;\r\n    constructor(pattern: number[], bonus: number = 0) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.kind = Array(pattern.length).fill(0);\r\n        this.bonusPoints = bonus;\r\n        this.index = 0;\r\n    }\r\n\r\n    add(dice: number) {\r\n        console.log(\"Adding: \" + dice);\r\n        if (this.isAPreviousValue(dice) || this.index >= this.pattern.length) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.pattern[this.index]; i++) {\r\n            super.add(dice);\r\n        }\r\n        this.kind[this.index] = dice;\r\n        this.index += 1\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return super.canBeNext(v) && !this.isAPreviousValue(v) && this.index < this.pattern.length\r\n    }\r\n\r\n    isAPreviousValue(d: number): boolean {\r\n        return this.kind.includes(d);\r\n    }\r\n\r\n    clear() {\r\n        super.clear()\r\n        this.kind = Array(this.pattern.length).fill(0);\r\n        this.index = 0\r\n    }\r\n\r\n    back() {\r\n        if (this.index === 0) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this.index -= 1;\r\n        this.kind[this.index] = 0;\r\n        for (let i = 0; i < this.pattern[this.index]; i++) {\r\n            super.back();\r\n        }\r\n    }\r\n\r\n    score(): number {\r\n        return (this.index === this.pattern.length ? this.bonusPoints : 0) + super.score();\r\n    }\r\n\r\n    scratch() {\r\n        this.clear()\r\n        super.scratch()\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return this.index !== 0 && this.index < this.pattern.length\r\n    }\r\n}\r\n\r\nclass FixedRound extends Round {\r\n    bonusPoints: number;\r\n    set: boolean;\r\n    pattern: number[];\r\n    constructor(pattern: number[], bonusPoints: number) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.bonusPoints = bonusPoints;\r\n        this.set = false;\r\n\r\n    }\r\n\r\n    add(dice: number) {\r\n        if (!this.pattern.includes(dice) || this.set) {\r\n            return\r\n        }\r\n        this.pattern.forEach(d => super.add(d));\r\n        this.set = true;\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return !this.set && this.pattern.includes(v);\r\n    }\r\n\r\n\r\n    clear() {\r\n        super.clear();\r\n        this.set = false;\r\n    }\r\n\r\n    back() {\r\n        this.pattern.forEach(d => super.back());\r\n        this.set = false;\r\n    }\r\n\r\n    scratch() {\r\n        super.scratch();\r\n        this.set = false;\r\n    }\r\n\r\n    score(): number {\r\n        return (this.set ? this.bonusPoints : 0) + super.score();\r\n    }\r\n\r\n    ssIncomplete(): boolean {\r\n        return false;\r\n    }\r\n\r\n}","import { Round } from './YatzySet'\r\n\r\nexport function Felt(props: Props) {\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={\"felt\" + (props.Round === props.CurrentRound ? \" valgt\" : \"\")}\r\n        >\r\n            {props.Round?.toString()}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\ninterface Props {\r\n    onClick: () => void;\r\n    Round: Round;\r\n    CurrentRound: Round;\r\n  }\r\n\r\n","import { Felt } from './Felt'\r\nimport { Round } from './YatzySet'\r\n\r\nexport function Række(props: Props) {\r\n    return (\r\n        <div className=\"række\">\r\n            <span className={(props.available ? \"etiket\" : \"etiket brugt\")} >\r\n                {props.Slags}\r\n            </span>\r\n            {FeltI(0, props)}\r\n            {FeltI(1, props)}\r\n            {FeltI(2, props)}\r\n            {FeltI(3, props)}\r\n            {FeltI(4, props)}\r\n            {FeltI(5, props)}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction FeltI(i: number, props: Props) {\r\n    return (\r\n        <Felt onClick={() => props.onClick(i)}\r\n            Round={props.rounds[i]}\r\n            CurrentRound={props.currentRound}  />\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    onClick: (i: number) => void;\r\n    rounds: Round[];\r\n    Slags: string;\r\n    available: boolean;\r\n    currentRound: Round;\r\n}\r\n","export function ResultatFelt(props: Props) {\r\n    return (\r\n        <button\r\n            className=\"felt\"\r\n        >\r\n            {props.Value}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\ninterface Props {\r\n    Value: string;\r\n  }\r\n\r\n","import {ResultatFelt} from './ResultatFelt'\r\n\r\nexport function LæsRække(props: Props) {\r\n    return (\r\n        <div className=\"række\">\r\n            <span className=\"etiket\"> {props.Slags}</span>\r\n            {LæsFeltI(0,props)}\r\n            {LæsFeltI(1,props)}\r\n            {LæsFeltI(2,props)}\r\n            {LæsFeltI(3,props)}\r\n            {LæsFeltI(4,props)}\r\n            {LæsFeltI(5,props)}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LæsFeltI(i: number, props: Props){\r\n    return <ResultatFelt Value={props.Tal[i].toString()} />;\r\n\r\n}\r\n\r\ninterface Props {\r\n    Slags: string;\r\n    Tal: number[];\r\n  }\r\n","import React from 'react';\r\n\r\n\r\ninterface Props {\r\n    valid: boolean[];\r\n}\r\n\r\nexport function Navne(props: Props) {\r\n    return (\r\n        <div className=\"øverst\">\r\n            <span className=\"etiket\"> Navn</span>\r\n            <input type=\"text\" className={\"felt navn\" + (props.valid[0] ? \"\" : \" fejl\")}></input>\r\n            <input type=\"text\" className={\"felt navn\" + (props.valid[1] ? \"\" : \" fejl\")}></input>\r\n            <input type=\"text\" className={\"felt navn\" + (props.valid[2] ? \"\" : \" fejl\")}></input>\r\n            <input type=\"text\" className={\"felt navn\" + (props.valid[3] ? \"\" : \" fejl\")}></input>\r\n            <input type=\"text\" className={\"felt navn\" + (props.valid[4] ? \"\" : \" fejl\")}></input>\r\n            <input type=\"text\" className={\"felt navn\" + (props.valid[5] ? \"\" : \" fejl\")}></input>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function Mellemrum(props: {}) {\r\n    return (\r\n        <div className=\"mellemrum\">\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { SpeedDialAction } from '@mui/material';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport DialIcon from '@mui/icons-material/LunchDining';\r\nimport FullScreenIcon from '@mui/icons-material/Fullscreen';\r\n\r\nconst screenfull = require('screenfull');\r\n\r\nexport function Menu(props: Props)  {\r\n    \r\n        return (\r\n            <SpeedDial\r\n            ariaLabel=\"Yatzy\"\r\n            sx={{ position: 'absolute', bottom: 2, right: 2 }}\r\n            icon={<SpeedDialIcon\r\n                icon={<DialIcon />}\r\n\r\n            />}\r\n        >\r\n           \r\n            <SpeedDialAction\r\n                onClick={() => toggleFullScreen()}\r\n                tooltipTitle=\"Full screen\"\r\n                icon={<FullScreenIcon />} />\r\n            <SpeedDialAction\r\n            onClick={() => bekræft(props.clear)}\r\n            tooltipTitle=\"Clear board\"\r\n            icon={<DeleteIcon/>} />\r\n\r\n        </SpeedDial>\r\n        );\r\n\r\n    }\r\n\r\nfunction bekræft (clear: () => void){\r\n    if (window.confirm(\"Ægte?\")){\r\n        clear();\r\n    }\r\n}\r\n\r\ninterface Props {\r\n    clear: () => void;\r\n  }\r\n\r\nfunction  toggleFullScreen () {\r\n    if (screenfull.isEnabled) {\r\n        screenfull.toggle();\r\n    }\r\n};","import React from 'react';\r\nimport { Round, YatzySet, RoundState } from './YatzySet';\r\nimport { Række } from './Række';\r\nimport { LæsRække } from './LæsRække';\r\nimport { Navne } from \"./Navne\";\r\nimport { Mellemrum } from \"./Mellemrum\";\r\nimport { ReactElement } from 'react';\r\nimport { Menu } from './Menu';\r\n\r\n\r\n\r\ninterface State {\r\n    YatzySets: YatzySet[];\r\n    currentSet: YatzySet;\r\n    currentRound: Round;\r\n}\r\n\r\n\r\nexport class Board extends React.Component<{}, State> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        let sets = this.clearSets();\r\n        let storedStateJson = localStorage.getItem('MogensYatzy');\r\n        if (storedStateJson !== null) {\r\n            var allRounds: RoundState[][] = JSON.parse(storedStateJson);\r\n\r\n            console.log(\"Board loaded\");\r\n\r\n            for (let index = 0; index < allRounds.length; index++) {\r\n                const element = allRounds[index];\r\n                sets[index].setCubes(element);\r\n            }\r\n\r\n        }\r\n        this.state = {\r\n            YatzySets: sets,\r\n            currentSet: sets[0],\r\n            currentRound: sets[0].round(0),\r\n        };\r\n    }\r\n\r\n    clearSets(): YatzySet[] {\r\n        let sets = Array(6).fill(null).map(() => new YatzySet());\r\n        for (let index = 1; index < sets.length; index++) {\r\n            const left = sets[index - 1];\r\n            const right = sets[index];\r\n            left.setRight(right);\r\n            right.setLeft(left);\r\n        }\r\n        return sets;\r\n    }\r\n\r\n    handleClick(p: number, r: number) {\r\n        console.log(\"Call back player: \" + p + \" round: \" + r);\r\n        var set = this.state.YatzySets[p];\r\n        var round = set.round(r);\r\n        this.setState({\r\n            YatzySets: this.state.YatzySets,\r\n            currentSet: set,\r\n            currentRound: round\r\n        });\r\n\r\n    }\r\n\r\n    rowFunc(round: number): (p: number) => void {\r\n        return (player) => this.handleClick(player, round);\r\n    }\r\n\r\n    rowRounds(i: number): Round[] {\r\n        let result = this.state.YatzySets.map(ys => ys.round(i));\r\n        return result;\r\n    }\r\n\r\n    addDice(i: number) {\r\n        this.state.currentRound.add(i);\r\n        this.setState(this.state);\r\n        this.storeBoard();\r\n    }\r\n\r\n    removeDice() {\r\n        console.log(\"Back\");\r\n        this.state.currentRound.back();\r\n        this.setState(this.state);\r\n        this.storeBoard();\r\n    }\r\n\r\n    scratch() {\r\n        console.log(\"Scratch\");\r\n        this.state.currentRound.scratch();\r\n        this.setState(this.state);\r\n        this.storeBoard();\r\n    }\r\n\r\n    clearBoard() {\r\n        console.log(\"Clear board\");\r\n        const sets = this.clearSets();\r\n        this.setState({\r\n            YatzySets: sets,\r\n            currentSet: sets[0],\r\n            currentRound: sets[0].round(0),\r\n        });\r\n        this.storeBoard(sets);\r\n\r\n    }\r\n\r\n    storeBoard(sets: YatzySet[] | null = null) {\r\n        console.log(\"Store board\");\r\n        if (sets == null) {\r\n            sets = this.state.YatzySets;\r\n        }\r\n        localStorage.setItem(\"MogensYatzy\", JSON.stringify(sets.map(ys => ys.allCubes())));\r\n    }\r\n\r\n\r\n    terning(i: number) {\r\n        return (\r\n            <button className=\"terning\"\r\n                disabled={!this.state.currentRound.canBeNext(i)}\r\n                onClick={() => this.addDice(i)}>\r\n                {i}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    række(round: number, slags: string): ReactElement {\r\n        return <Række Slags={slags}\r\n            onClick={this.rowFunc(round)} rounds={this.rowRounds(round)}\r\n            available={this.state.currentSet.rounds[round].blank()}\r\n            currentRound={this.state.currentRound} />;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"blok\">\r\n                    <Navne valid={this.state.YatzySets.map(ys => ys.verify())} />\r\n                    {this.række(0, \"1\")}\r\n                    {this.række(1, \"2\")}\r\n                    {this.række(2, \"3\")}\r\n                    {this.række(3, \"4\")}\r\n                    {this.række(4, \"5\")}\r\n                    {this.række(5, \"6\")}\r\n                    <Mellemrum />\r\n                    <LæsRække Slags=\"Bonus\" Tal={this.state.YatzySets.map(ys => ys.bonus())}></LæsRække>\r\n                    <Mellemrum />\r\n                    {this.række(6, \"1 par\")}\r\n                    {this.række(7, \"2 par\")}\r\n                    {this.række(8, \"3 par\")}\r\n                    {this.række(9, \"3 ens\")}\r\n                    {this.række(10, \"4 ens\")}\r\n                    {this.række(11, \"2 x 3 ens\")}\r\n                    {this.række(12, \"Lav\")}\r\n                    {this.række(13, \"Høj\")}\r\n                    {this.række(14, \"Cameron\")}\r\n                    {this.række(15, \"Hus\")}\r\n                    {this.række(16, \"Chance\")}\r\n                    {this.række(17, \"Yatzy\")}\r\n                    <Mellemrum />\r\n                    <LæsRække Slags=\"Total\" Tal={this.state.YatzySets.map(ys => ys.score())}></LæsRække>\r\n                </div>\r\n                <div className=\"nederst\">\r\n                    <div className=\"slag\">\r\n                        {this.state.currentRound.toArray()}\r\n                    </div>\r\n                    <div className=\"knaplinje\">\r\n                        {this.terning(1)}\r\n                        {this.terning(2)}\r\n                        {this.terning(3)}\r\n                        {this.terning(4)}\r\n                        {this.terning(5)}\r\n                        {this.terning(6)}\r\n                        <button className=\"terning\" onClick={() => this.scratch()}>X</button>\r\n                        <button className=\"terning\" disabled={this.state.currentRound.blank()} onClick={() => this.removeDice()}>&lt;</button>\r\n                    </div>\r\n                </div>\r\n               <Menu clear={() => this.clearBoard()} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Board } from './Board';\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport class Game extends React.Component {\r\n    componentDidMount() {\r\n        document.title = \"Mogens Yatzy\"\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Board />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Game } from './Game';\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}