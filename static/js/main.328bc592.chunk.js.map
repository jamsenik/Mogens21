{"version":3,"sources":["YatzySet.ts","Felt.tsx","Række.tsx","ResultatFelt.tsx","LæsRække.tsx","Navne.tsx","Clear.tsx","GroupName.tsx","ButtonBar.tsx","ShortCuts.tsx","IpAddress.ts","RemoteState.ts","Game.tsx","index.tsx"],"names":["YatzySet","rounds","left","right","r","UpperRound","push","PatternRound","FixedRound","Round","this","l","p","roundsPlayed","playedRounds","length","i","filter","round","blank","reduce","sum","score","bonus","isTopSet","slice","every","map","cubes","scratched","scrathed","index","element","scratch","forEach","cube","add","c","dice","pop","clear","join","toString","v","kind","pattern","bonusPoints","Array","fill","console","log","isAPreviousValue","d","includes","set","Felt","props","TableCell","onClick","sx","paddingX","paddingY","minWidth","fontSize","bgcolor","CurrentRound","align","Række","TableRow","selected","some","currentRound","color","available","Slags","FeltI","ResultatFelt","Value","LæsRække","LæsFeltI","Tal","Navn","theName","names","paddingTop","maxHeight","TextField","variant","value","error","valid","helperText","size","onFocus","event","target","select","inputProps","style","padding","onChange","e","updateName","Navne","TableHead","Clear","React","open","setOpen","handleClose","MenuItem","ListItemIcon","Dialog","onClose","DialogTitle","DialogActions","Button","autoFocus","GroupName","group","setGroup","DialogContent","DialogContentText","margin","id","fullWidth","defaultValue","currentGroup","screenfull","require","ButtonBar","useState","anchorEl","setAnchorEl","Boolean","AppBar","position","top","bottom","Toolbar","disableGutters","Box","flexGrow","ButtonGroup","Dice","IconButton","edge","backspace","currentTarget","MenuListProps","gn","groupName","isEnabled","toggle","fontFamily","diceClick","disabled","diceEnabled","ShortCuts","handlers","ONE","preventDefault","TWO","THREE","FOUR","FIVE","SIX","BACK_SPACE","NEXT","next","keyMap","address","GetIpAddress","undefined","fetch","json","ip","unsub","fbapp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","documentName","subscribe","currentState","callback","doc","onSnapshot","data","state","JSON","parse","setDoc","stringify","clearSets","sets","setRight","setLeft","then","s","Game","emptySets","YatzySets","currentSet","roundState","newState","currentPlayer","ListenToRemoteState","game","updateState","allRounds","storedSets","setCubes","setState","storeBoard","player","handleClick","ys","canBeNext","back","name","groupname","g","getState","StoreRemoteState","allCubes","statedto","className","addDice","nextSet","slags","rowFunc","rowRounds","removeDice","TableContainer","component","Paper","Table","verify","TableBody","række","toArray","clearBoard","updateGroupName","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.328bc592.chunk.js","sourcesContent":["export class YatzySet {\r\n    rounds: Round[];\r\n    left: YatzySet | null;\r\n    right: YatzySet | null;\r\n\r\n    constructor() {\r\n        let r: Round[] = [new UpperRound(1), new UpperRound(2), new UpperRound(3), new UpperRound(4), new UpperRound(5), new UpperRound(6)];\r\n        r.push(new PatternRound([2]));\r\n        r.push(new PatternRound([2, 2]));\r\n        r.push(new PatternRound([2, 2, 2]));\r\n        r.push(new PatternRound([3]));\r\n        r.push(new PatternRound([4]));\r\n        r.push(new PatternRound([3, 3]));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5], 0));\r\n        r.push(new FixedRound([2, 3, 4, 5, 6], 0));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5, 6], 9));\r\n        r.push(new PatternRound([3, 2]));\r\n        r.push(new Round());\r\n        r.push(new PatternRound([6], 100));\r\n        this.rounds = r;\r\n        this.left = null;\r\n        this.right = null;\r\n\r\n    }\r\n\r\n    setLeft(l: YatzySet) {\r\n        this.left = l;\r\n    }\r\n\r\n    setRight(r: YatzySet) {\r\n        this.right = r;\r\n    }\r\n\r\n\r\n    verify() {\r\n        let p = this.roundsPlayed();\r\n        if (this.left !== null && p !== 0) {\r\n            let l = this.left.roundsPlayed();\r\n            if (l !== p && l !== p + 1) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.right !== null) {\r\n            let r = this.right.roundsPlayed();\r\n            if (r !== 0) {\r\n                if (r !== p - 1 && r !== p) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    roundsPlayed() {\r\n        return this.playedRounds().length;\r\n    }\r\n\r\n    round(i: number): Round {\r\n        return this.rounds[i];\r\n    }\r\n\r\n    score(): number {\r\n        return this.rounds.filter(round => !round.blank()).reduce((sum, round) => sum + round.score(), 0) + this.bonus();\r\n    }\r\n\r\n    bonus(): number {\r\n        return this.isTopSet() && this.rounds.slice(0, 6).reduce((sum, r) => sum + r.score(), 0) >= 0 ? 50 : 0;\r\n    }\r\n\r\n    isTopSet(): boolean {\r\n        const ts = this.rounds.slice(0, 6).every(round => !round.blank());\r\n        return ts;\r\n    }\r\n\r\n    playedRounds(): Round[] {\r\n        return this.rounds.filter(round => !round.blank());\r\n    }\r\n\r\n    allCubes(): RoundState[] {\r\n        return this.rounds.map(r => {\r\n            var state: RoundState = {\r\n                cubes: r.cubes,\r\n                scratched: r.scrathed\r\n\r\n            };\r\n            return state;\r\n        });\r\n    }\r\n\r\n    setCubes(rounds: RoundState[]) {\r\n        for (let index = 0; index < rounds.length; index++) {\r\n            const element = rounds[index];\r\n            if (element.scratched) {\r\n                this.rounds[index].scratch();\r\n            } else {\r\n                element.cubes.forEach(cube => {\r\n                    this.rounds[index].add(cube);\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport interface GameState {\r\n    names: string[];\r\n    rounds: RoundState[][];\r\n    currentPlayer: number;\r\n    currentRound: number;\r\n}\r\n\r\nexport interface RoundState {\r\n    cubes: number[];\r\n    scratched: boolean;\r\n}\r\n\r\nexport class Round {\r\n    cubes: number[];\r\n    scrathed: boolean;\r\n    constructor() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    score(): number {\r\n        if (this.scrathed) {\r\n            return 0;\r\n        }\r\n        return this.cubes.reduce((sum, c) => sum + c, 0);\r\n    }\r\n\r\n    blank(): boolean {\r\n        return this.cubes.length === 0 && !this.scrathed;\r\n    }\r\n\r\n    add(dice: number) {\r\n        this.cubes.push(dice);\r\n        this.scrathed = false;\r\n\r\n    }\r\n\r\n    scratch() {\r\n        this.cubes = [];\r\n        this.scrathed = true;\r\n    }\r\n\r\n    clear() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    back() {\r\n        this.cubes.pop();\r\n        if (this.scrathed) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    toArray(): string {\r\n        return this.cubes.join(\"\");\r\n    }\r\n\r\n    toString(): string {\r\n        if (this.scrathed) {\r\n            return \"X\";\r\n        }\r\n        if (this.blank()) {\r\n            return \"\\xa0\";\r\n        }\r\n        return this.score().toString();\r\n    }\r\n\r\n    bonus(): number {\r\n        return 0;\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return this.cubes.length < 6;\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return this.cubes.length > 0 && this.cubes.length < 6;\r\n    }\r\n}\r\n\r\nclass UpperRound extends Round {\r\n    kind: number;\r\n    constructor(kind: number) {\r\n        super();\r\n        this.kind = kind;\r\n    }\r\n\r\n    add(dice: number) {\r\n        if (dice === this.kind) {\r\n            super.add(dice)\r\n        }\r\n    }\r\n\r\n    score(): number {\r\n        return super.score() - 4 * this.kind\r\n    }\r\n\r\n    bouns(): number {\r\n        return this.score()\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return super.canBeNext(v) && v === this.kind;\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nclass PatternRound extends Round {\r\n    pattern: number[];\r\n    kind: number[];\r\n    bonusPoints: number;\r\n    index: number;\r\n    constructor(pattern: number[], bonus: number = 0) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.kind = Array(pattern.length).fill(0);\r\n        this.bonusPoints = bonus;\r\n        this.index = 0;\r\n    }\r\n\r\n    add(dice: number) {\r\n        console.log(\"Adding: \" + dice);\r\n        if (this.isAPreviousValue(dice) || this.index >= this.pattern.length) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.pattern[this.index]; i++) {\r\n            super.add(dice);\r\n        }\r\n        this.kind[this.index] = dice;\r\n        this.index += 1\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return super.canBeNext(v) && !this.isAPreviousValue(v) && this.index < this.pattern.length\r\n    }\r\n\r\n    isAPreviousValue(d: number): boolean {\r\n        return this.kind.includes(d);\r\n    }\r\n\r\n    clear() {\r\n        super.clear()\r\n        this.kind = Array(this.pattern.length).fill(0);\r\n        this.index = 0\r\n    }\r\n\r\n    back() {\r\n        if (this.index === 0) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this.index -= 1;\r\n        this.kind[this.index] = 0;\r\n        for (let i = 0; i < this.pattern[this.index]; i++) {\r\n            super.back();\r\n        }\r\n    }\r\n\r\n    score(): number {\r\n        return (this.index === this.pattern.length ? this.bonusPoints : 0) + super.score();\r\n    }\r\n\r\n    scratch() {\r\n        this.clear()\r\n        super.scratch()\r\n    }\r\n\r\n    isIncomplete(): boolean {\r\n        return this.index !== 0 && this.index < this.pattern.length\r\n    }\r\n}\r\n\r\nclass FixedRound extends Round {\r\n    bonusPoints: number;\r\n    set: boolean;\r\n    pattern: number[];\r\n    constructor(pattern: number[], bonusPoints: number) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.bonusPoints = bonusPoints;\r\n        this.set = false;\r\n\r\n    }\r\n\r\n    add(dice: number) {\r\n        if (!this.pattern.includes(dice) || this.set) {\r\n            return\r\n        }\r\n        this.pattern.forEach(d => super.add(d));\r\n        this.set = true;\r\n    }\r\n\r\n    canBeNext(v: number): boolean {\r\n        return !this.set && this.pattern.includes(v);\r\n    }\r\n\r\n\r\n    clear() {\r\n        super.clear();\r\n        this.set = false;\r\n    }\r\n\r\n    back() {\r\n        this.pattern.forEach(d => super.back());\r\n        this.set = false;\r\n    }\r\n\r\n    scratch() {\r\n        super.scratch();\r\n        this.set = false;\r\n    }\r\n\r\n    score(): number {\r\n        return (this.set ? this.bonusPoints : 0) + super.score();\r\n    }\r\n\r\n    ssIncomplete(): boolean {\r\n        return false;\r\n    }\r\n\r\n}","import { TableCell } from '@mui/material';\r\nimport { Round } from './YatzySet'\r\n\r\nexport function Felt(props: Props) {\r\n    return (\r\n        <TableCell \r\n            onClick={props.onClick} \r\n            sx={{paddingX:0, paddingY:0, minWidth: \"10px\", fontSize: \"2.2vh\", bgcolor: props.Round === props.CurrentRound ? \"primary.main\" : null}}\r\n            align='center'\r\n            >\r\n            {props.Round?.toString()+\" \"}\r\n        </TableCell>\r\n    );\r\n}\r\n\r\n\r\ninterface Props {\r\n    onClick: () => void;\r\n    Round: Round;\r\n    CurrentRound: Round;\r\n  }\r\n\r\n","import { TableCell, TableRow } from '@mui/material';\r\nimport React from 'react';\r\nimport { Felt } from './Felt'\r\nimport { Round } from './YatzySet'\r\n\r\nexport function Række(props: Props) {\r\n    return (\r\n        <TableRow selected = {props.rounds.some(r => r === props.currentRound)}\r\n                 sx={{}}\r\n        >\r\n            <TableCell align=\"left\"\r\n                sx={{ color: props.available ? 'text.primary' : 'ghostwhite', \r\n                      paddingY:\"0px\",\r\n                      fontSize: \"2.3vh\"\r\n            }}\r\n            >\r\n                {props.Slags}\r\n            </TableCell>\r\n            {FeltI(0 , props)}\r\n            {FeltI(1 , props)}\r\n            {FeltI(2 , props)}\r\n            {FeltI(3 , props)}\r\n            {FeltI(4 , props)}\r\n            {FeltI(5 , props)}\r\n\r\n\r\n        </TableRow>\r\n\r\n    );\r\n}\r\n\r\nfunction FeltI(i: number, props: Props) {\r\n    return (\r\n        <Felt onClick={() => props.onClick(i)}\r\n            Round={props.rounds[i]}\r\n            CurrentRound={props.currentRound} />\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    onClick: (i: number) => void;\r\n    rounds: Round[];\r\n    Slags: string;\r\n    available: boolean;\r\n    currentRound: Round;\r\n}\r\n","import { TableCell } from '@mui/material';\r\nexport function ResultatFelt(props: Props) {\r\n    return (\r\n            <TableCell sx={{paddingX:0, paddingY:0, minWidth: \"10px\", fontSize: \"2.2vh\"}}\r\n                    align='center'>\r\n                {props.Value}\r\n            </TableCell>\r\n    );\r\n}\r\n\r\n\r\ninterface Props {\r\n    Value: string;\r\n  }\r\n\r\n","import {ResultatFelt} from './ResultatFelt'\r\nimport { TableCell, TableRow } from '@mui/material';\r\n\r\nexport function LæsRække(props: Props) {\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell align=\"left\"\r\n             sx={{ paddingY:\"2px\", fontSize: \"2.2vh\"}} \r\n            >\r\n                {props.Slags}\r\n            </TableCell>\r\n            {LæsFeltI(0 , props)}\r\n            {LæsFeltI(1 , props)}\r\n            {LæsFeltI(2 , props)}\r\n            {LæsFeltI(3 , props)}\r\n            {LæsFeltI(4 , props)}\r\n            {LæsFeltI(5 , props)}\r\n\r\n\r\n        </TableRow>\r\n\r\n    );\r\n}\r\n\r\nfunction LæsFeltI(i: number, props: Props){\r\n    return <ResultatFelt Value={props.Tal[i].toString()} />;\r\n\r\n}\r\n\r\ninterface Props {\r\n    Slags: string;\r\n    Tal: number[];\r\n  }\r\n","import { TableCell, TableHead, TableRow, TextField } from '@mui/material';\r\nimport React from 'react';\r\n\r\n\r\ninterface Props {\r\n    valid: boolean[];\r\n    names: string[];\r\n    updateName: (name: string, index: number) => void;\r\n}\r\n\r\nfunction Navn(i: number, props: Props) {\r\n    const theName = props.names[i];\r\n    return <TableCell sx={{paddingX:\"2px\", paddingY:\"px\", minWidth: \"10px\", paddingTop: 0, maxHeight: \"2vh\"}}>\r\n        <TextField\r\n            variant=\"filled\"\r\n            value={theName}\r\n            error={!props.valid[i]}\r\n            helperText={!props.valid[i] ? \"FEJL\" : \"\"}\r\n            size=\"small\"\r\n            onFocus={event => {\r\n                event.target.select();\r\n              }}\r\n              inputProps={{\r\n                style: {\r\n                  padding: 5\r\n                }\r\n             }}\r\n             onChange={ e => props.updateName(e.target.value, i)}\r\n\r\n        >  </TextField>\r\n    </TableCell>\r\n\r\n}\r\n\r\nexport function Navne(props: Props) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell sx={{paddingX:\"1px\", paddingY:\"0px\", minWidth: \"10px\", maxHeight: \"1vh\"}}/>\r\n                {Navn(0, props)}\r\n                {Navn(1, props)}\r\n                {Navn(2, props)}\r\n                {Navn(3, props)}\r\n                {Navn(4, props)}\r\n                {Navn(5, props)}\r\n            </TableRow>\r\n        </TableHead >\r\n\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { ListItemIcon, MenuItem } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\ninterface Props {\r\n  clear: () => void;\r\n}\r\n\r\nexport default function Clear(props: Props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem onClick={handleClickOpen}>\r\n        <ListItemIcon>\r\n          <DeleteIcon fontSize=\"large\" />\r\n        </ListItemIcon>\r\n      </MenuItem>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle >\r\n          {\"Slet spil?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Nåhr, nej</Button>\r\n          <Button onClick={() => {props.clear(); handleClose()}} autoFocus>Ægte!</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { ListItemIcon, MenuItem, TextField } from '@mui/material';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\n\r\n\r\ninterface Props {\r\n  setGroup: (name: string) => void;\r\n  currentGroup: string;\r\n}\r\n\r\nexport default function GroupName(props: Props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [group, setGroup] = React.useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem onClick={handleClickOpen}>\r\n        <ListItemIcon>\r\n          <GroupIcon fontSize=\"large\" />\r\n        </ListItemIcon>\r\n      </MenuItem>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle >\r\n          {\"Hvilken gruppe\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Hvad kalder I den gruppe der spiller?\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={(e) => setGroup(e.target.value)}\r\n            defaultValue={props.currentGroup}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Bliv</Button>\r\n          <Button onClick={() => { props.setGroup(group); handleClose() }}>Skift</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Box from '@mui/material/Box';\r\nimport BackspaceIcon from '@mui/icons-material/Backspace';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Button from '@mui/material/Button';\r\nimport { ButtonGroup, ListItemIcon } from '@mui/material';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\r\nimport Clear from './Clear';\r\nimport GroupName from './GroupName';\r\n\r\nconst size = \"min(6vw, 1cm)\"\r\nconst screenfull = require('screenfull');\r\n\r\nexport function ButtonBar(props: Props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n\r\n\r\n    };\r\n\r\n    // enabling fullscreen has to be done after some user input\r\n    const toggleFullScreen = () => {\r\n        if (screenfull.isEnabled) {\r\n            screenfull.toggle();\r\n        }\r\n    };\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\r\n            <Toolbar disableGutters={true}>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <ButtonGroup variant=\"text\" size=\"small\">\r\n                    {Dice(1, props)}\r\n                    {Dice(2, props)}\r\n                    {Dice(3, props)}\r\n                    {Dice(4, props)}\r\n                    {Dice(5, props)}\r\n                    {Dice(6, props)}\r\n                    <IconButton color=\"inherit\" edge='start' onClick={() => props.scratch()}>\r\n                        <ClearIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                    <IconButton color=\"inherit\" edge='start' onClick={() => props.backspace()}>\r\n                        <BackspaceIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                    <IconButton color=\"inherit\" edge='start' onClick={handleClick}>\r\n                        <MenuIcon style={{ fontSize: size }} />\r\n                    </IconButton>\r\n                </ButtonGroup>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n\r\n                    <GroupName setGroup={gn => {props.setGroup(gn); handleClose()}} currentGroup={props.groupName}/>\r\n                    <Clear clear={() => {props.clear(); handleClose();}} />\r\n                    <MenuItem onClick={() => { toggleFullScreen(); handleClose() }}>\r\n                        <ListItemIcon>\r\n                            <FullscreenIcon fontSize=\"large\" />\r\n                        </ListItemIcon>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\n\r\nfunction Dice(i: number, props: Props) {\r\n    return (<Button\r\n        variant=\"contained\"\r\n        sx={{ fontSize: size, fontFamily: 'Mogens Dice' }}\r\n        onClick={() => props.diceClick(i)}\r\n        disabled={!props.diceEnabled(i)}\r\n        size='small'\r\n    >\r\n        {i}\r\n    </Button>);\r\n}\r\n\r\ninterface Props {\r\n    diceClick: (i: number) => void;\r\n    diceEnabled: (i: number) => boolean;\r\n    backspace: () => void;\r\n    scratch: () => void;\r\n    clear: () => void;\r\n    setGroup: (name: string) => void;\r\n    groupName: string;\r\n}\r\n","import React from 'react';\r\nimport { GlobalHotKeys } from 'react-hotkeys';\r\n\r\nexport function ShortCuts(props: Props) {\r\n    const keyMap = {\r\n        ONE: \"1\",\r\n        TWO: \"2\",\r\n        THREE: \"3\",\r\n        FOUR: \"4\",\r\n        FIVE: \"5\",\r\n        SIX: \"6\",\r\n        BACK_SPACE: \"del backspace\",\r\n        NEXT: \"space ctrl+m\"\r\n    };\r\n\r\n    const one : (keyEvent?: KeyboardEvent) => void = (event) => {\r\n        console.log(\"One\");\r\n        if (event) {\r\n            event.preventDefault();\r\n          }\r\n        props.diceClick(1);\r\n    };\r\n    const two = () => {\r\n        console.log(\"Two\");\r\n\r\n        props.diceClick(2);\r\n    };\r\n    const three = () => {\r\n        props.diceClick(3);\r\n    };\r\n    const four = () => {\r\n        props.diceClick(4);\r\n    };\r\n    const five = () => {\r\n        props.diceClick(5);\r\n    };\r\n    const six = () => {\r\n        props.diceClick(6);\r\n    };\r\n    const backspace = () => {\r\n        props.backspace();\r\n    };\r\n    const next = () => {\r\n        console.log(\"Next\");\r\n        props.next();\r\n    };\r\n\r\n    const handlers = {\r\n        ONE: one,\r\n        TWO: two,\r\n        THREE: three,\r\n        FOUR: four,\r\n        FIVE: five,\r\n        SIX: six,\r\n        BACK_SPACE: backspace,\r\n        NEXT: next\r\n\r\n    };\r\n    return (\r\n        <GlobalHotKeys keyMap={keyMap} handlers={handlers} />)\r\n}\r\n\r\ninterface Props {\r\n    diceClick: (i: number) => void;\r\n    // diceEnabled: (i: number) => boolean;\r\n    backspace: () => void;\r\n    // scratch: () => void;\r\n    // clear: () => void;\r\n    next: () => void;\r\n}","var address:IpAddress;\r\nexport async function GetIpAddress(): Promise<string> {\r\n    console.log(\"Getting address\");\r\n    if (address === undefined) {\r\n        address = (await (await fetch(\"https://api.ipify.org?format=json\")).json()) as IpAddress\r\n    }\r\n    console.log(\"Ip address\", address);\r\n    return address.ip;\r\n}\r\n\r\ntype IpAddress = {\r\n    ip: string;\r\n  }\r\n","\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore, setDoc, doc, onSnapshot, Unsubscribe } from 'firebase/firestore';\r\nimport { GetIpAddress } from './IpAddress';\r\nimport { GameState, RoundState } from './YatzySet';\r\n\r\nconst fbapp = initializeApp({\r\n    apiKey: \"AIzaSyDXKRP_mnNEJF5wkWkZ0fGFmPUAIZvE7Js\",\r\n    authDomain: \"mogens-357414.firebaseapp.com\",\r\n    projectId: \"mogens-357414\",\r\n    storageBucket: \"mogens-357414.appspot.com\",\r\n    messagingSenderId: \"290609839228\",\r\n    appId: \"1:290609839228:web:94a29c55cb630c9df49df9\"\r\n})\r\n\r\nconst db = getFirestore(fbapp);\r\nvar documentName = \"empty\";\r\nGetIpAddress().then(s => documentName = s);\r\nvar unsub: Unsubscribe;\r\n\r\nexport function ListenToRemoteState(callback: (game: GameState) => void) {\r\n    console.log(\"Group is IP\");     \r\n    const roundState: RoundState = {\r\n        cubes: Array<number>(0),\r\n        scratched: false\r\n    }  \r\n    const newState: GameState = {\r\n        names: Array<string>(6).fill(\"Spiller\"),\r\n        rounds: Array(6).fill(Array(17).fill(roundState)),\r\n        currentPlayer: 0,\r\n        currentRound: 0\r\n    };\r\n    console.log(\"New state: \", newState);\r\n    GetIpAddress().then(documentName => subscribe(documentName, newState, callback));\r\n}\r\n\r\nexport function ListenToRemoteStateUpdate(callback: (game: GameState) => void, currentState: GameState, groupname: string ) {\r\n        console.log(\"Group is\", groupname);\r\n        documentName = groupname;\r\n        subscribe(groupname, currentState, callback );\r\n}\r\n\r\nfunction subscribe(documentName: string, currentState: GameState, callback: (game: GameState) => void){\r\n        var d = doc(db, \"YatzySets\", documentName);\r\n        if (unsub !== undefined){\r\n            console.log(\"Already subscribed\");\r\n            unsub();\r\n        }\r\n        unsub = onSnapshot(d, (doc) => {\r\n            const data = doc.data();    \r\n            if (data === undefined) {\r\n                console.log(\"No existing document\");\r\n                \r\n                callback(currentState);\r\n                return;\r\n            }\r\n            console.log(\"Existing document: \", doc);\r\n            const state = JSON.parse(data.state) as GameState;\r\n            callback(state);\r\n\r\n        });\r\n}\r\n\r\nexport async function StoreRemoteState(state: GameState) {\r\n    await setDoc(doc(db, \"YatzySets\", documentName), { state: JSON.stringify(state) });\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Round, YatzySet, GameState } from './YatzySet';\r\nimport { Række } from './Række';\r\nimport { LæsRække } from './LæsRække';\r\nimport { Navne } from \"./Navne\";\r\nimport { ReactElement } from 'react';\r\nimport { ButtonBar } from './ButtonBar';\r\nimport { Paper, Table, TableBody, TableContainer } from '@mui/material';\r\nimport { ShortCuts } from './ShortCuts';\r\nimport { ListenToRemoteState, ListenToRemoteStateUpdate, StoreRemoteState } from './RemoteState';\r\n\r\n\r\n\r\ninterface State {\r\n    YatzySets: YatzySet[];\r\n    currentSet: number;\r\n    currentRound: number;\r\n    names: string[];\r\n    groupName?: string;\r\n}\r\n\r\nfunction clearSets(): YatzySet[] {\r\n    let sets = Array(6).fill(null).map(() => new YatzySet());\r\n    for (let index = 1; index < sets.length; index++) {\r\n        const left = sets[index - 1];\r\n        const right = sets[index];\r\n        left.setRight(right);\r\n        right.setLeft(left);\r\n    }\r\n    return sets;\r\n}\r\n\r\n\r\nexport class Game extends React.Component<{}, State> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        let emptySets = clearSets();\r\n        const names = [\"Spiller 1\", \"Spiller 2\", \"Spiller 3\", \"Spiller 4\", \"Spiller 5\", \"Spiller 6\"];\r\n        this.state = {\r\n            YatzySets: emptySets,\r\n            currentSet: 0,\r\n            currentRound: 0,\r\n            names: names,\r\n            groupName: undefined\r\n        };\r\n\r\n        ListenToRemoteState((game: GameState) => this.updateState(game));\r\n        console.log(\"End of constructor\", this);\r\n        \r\n    }\r\n\r\n    updateState(game: GameState) {\r\n        const allRounds = game.rounds;\r\n        console.log(\"As promised: \", game);\r\n\r\n        let storedSets = clearSets();\r\n        for (let index = 0; index < allRounds.length; index++) {\r\n            const element = allRounds[index];\r\n            storedSets[index].setCubes(element);\r\n        }\r\n        this.setState(\r\n            {\r\n                YatzySets: storedSets,\r\n                currentSet: game.currentPlayer,\r\n                currentRound: game.currentRound,\r\n                names: game.names\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n\r\n    handleClick(p: number, r: number) {\r\n        console.log(\"Call back player: \" + p + \" round: \" + r);\r\n        var set = this.state.YatzySets[p];\r\n        set.round(r);\r\n        const newState = {\r\n            YatzySets: this.state.YatzySets,\r\n            currentSet: p,\r\n            currentRound: r,\r\n            names: this.state.names\r\n\r\n        } as State;\r\n        this.setState(newState, () => this.storeBoard());\r\n        \r\n    }\r\n\r\n    rowFunc(round: number): (p: number) => void {\r\n        return (player) => this.handleClick(player, round);\r\n    }\r\n\r\n    rowRounds(i: number): Round[] {\r\n        let result = this.state.YatzySets.map(ys => ys.round(i));\r\n        return result;\r\n    }\r\n\r\n    addDice(i: number) {\r\n        const currentRound = this.state.YatzySets[this.state.currentSet].round(this.state.currentRound);\r\n        if (currentRound.canBeNext(i)) {\r\n            currentRound.add(i);\r\n            this.setState(this.state, () => this.storeBoard());\r\n        }\r\n    }\r\n\r\n    removeDice() {\r\n        console.log(\"Back\");\r\n        const currentRound = this.state.YatzySets[this.state.currentSet].round(this.state.currentRound);\r\n        currentRound.back();\r\n        this.setState(this.state, () => this.storeBoard());\r\n    }\r\n\r\n    scratch() {\r\n        console.log(\"Scratch\");\r\n        const currentRound = this.state.YatzySets[this.state.currentSet].round(this.state.currentRound);\r\n        currentRound.scratch();\r\n        this.setState(this.state, () => this.storeBoard());\r\n    }\r\n\r\n    clearBoard() {\r\n        console.log(\"Clear board\");\r\n        const sets = clearSets();\r\n        const newState = {\r\n            YatzySets: sets,\r\n            currentSet: 0,\r\n            currentRound: 0,\r\n            names: this.state.names\r\n        } as State;\r\n        this.setState(newState, () => this.storeBoard());\r\n    }\r\n\r\n    updateName(name: string, index: number) {\r\n        const newState = { ...this.state }\r\n        newState.names[index] = name;\r\n        this.setState(newState, () => this.storeBoard());\r\n    }\r\n\r\n    updateGroupName(name: string) {\r\n        ListenToRemoteStateUpdate(g => this.updateState(g), this.getState(), name);\r\n        const newState = { ...this.state }\r\n        newState.groupName = name;\r\n        this.setState(newState);\r\n    }\r\n\r\n    storeBoard() {\r\n        console.log(\"Store board\");\r\n        const state = this.getState();\r\n        StoreRemoteState(state);\r\n    }\r\n\r\n    getState(): GameState {\r\n        const sets = this.state.YatzySets;\r\n\r\n        const rounds = sets.map(ys => ys.allCubes());\r\n        const statedto = {} as GameState;\r\n        statedto.names = this.state.names;\r\n        statedto.rounds = rounds;\r\n        statedto.currentPlayer = this.state.currentSet;\r\n        statedto.currentRound = this.state.currentRound;\r\n        return statedto;\r\n    }\r\n\r\n\r\n    terning(i: number) {\r\n        return (\r\n            <button className=\"terning\"\r\n                disabled={!this.state.YatzySets[this.state.currentSet].round(this.state.currentRound).canBeNext(i)}\r\n                onClick={() => this.addDice(i)}>,\r\n                {i}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    next() {\r\n        const currentSet = this.state.currentSet;\r\n        const nextSet = currentSet % 6;\r\n        this.setState({\r\n            YatzySets: this.state.YatzySets,\r\n            currentSet: nextSet,\r\n            currentRound: 0\r\n        });\r\n    }\r\n\r\n    række(round: number, slags: string): ReactElement {\r\n        return <Række Slags={slags}\r\n            onClick={this.rowFunc(round)} rounds={this.rowRounds(round)}\r\n            available={this.state.YatzySets[this.state.currentSet].round(round).blank()}\r\n            currentRound={this.state.YatzySets[this.state.currentSet].round(this.state.currentRound)} />;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ShortCuts diceClick={(i: number) => { this.addDice(i) }}\r\n                    // diceEnabled={i => this.state.currentRound.canBeNext(i)}\r\n                    backspace={() => this.removeDice()}\r\n                    // scratch={() => this.scratch()}\r\n                    // clear={() => this.clearBoard()}\r\n                    next={() => this.next()}\r\n                />\r\n\r\n                <TableContainer component={Paper}>\r\n                    <Table size=\"small\" sx={{ minWidth: 200 }} aria-label=\"simple table\">\r\n                        <Navne valid={this.state.YatzySets.map(ys => ys.verify())}\r\n                            names={this.state.names}\r\n                            updateName={(name, index) => this.updateName(name, index)} />\r\n                        <TableBody>\r\n                            {this.række(0, \"1\")}\r\n                            {this.række(1, \"2\")}\r\n                            {this.række(2, \"3\")}\r\n                            {this.række(3, \"4\")}\r\n                            {this.række(4, \"5\")}\r\n                            {this.række(5, \"6\")}\r\n                            <LæsRække Slags=\"Bonus\" Tal={this.state.YatzySets.map(ys => ys.bonus())}></LæsRække>\r\n                            {this.række(6, \"1 par\")}\r\n                            {this.række(7, \"2 par\")}\r\n                            {this.række(8, \"3 par\")}\r\n                            {this.række(9, \"3 ens\")}\r\n                            {this.række(10, \"4 ens\")}\r\n                            {this.række(11, \"2 x 3 ens\")}\r\n                            {this.række(12, \"Lav\")}\r\n                            {this.række(13, \"Høj\")}\r\n                            {this.række(14, \"Cameron\")}\r\n                            {this.række(15, \"Hus\")}\r\n                            {this.række(16, \"Chance\")}\r\n                            {this.række(17, \"Yatzy\")}\r\n                            <LæsRække Slags=\"Total\" Tal={this.state.YatzySets.map(ys => ys.score())}></LæsRække>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div className=\"nederst\">\r\n                    <div className=\"slag\">\r\n                        {this.state.YatzySets[this.state.currentSet].round(this.state.currentRound).toArray()}\r\n                    </div>\r\n\r\n                </div>\r\n                <ButtonBar diceClick={(i: number) => { this.addDice(i) }}\r\n                    diceEnabled={i => this.state.YatzySets[this.state.currentSet].round(this.state.currentRound).canBeNext(i)}\r\n                    backspace={() => this.removeDice()}\r\n                    scratch={() => this.scratch()}\r\n                    clear={() => this.clearBoard()}\r\n                    setGroup={(name) => this.updateGroupName(name)}\r\n                    groupName={this.state.groupName ?? \"\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Game } from './Game';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}