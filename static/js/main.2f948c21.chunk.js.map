{"version":3,"sources":["yatzy.js","index.js"],"names":["YatzySet","playerId","this","r","UpperRound","push","PatternRound","FixedRound","Round","rounds","i","filter","round","blank","reduce","sum","score","bonus","isTopSet","slice","every","length","cubes","scrathed","c","dice","pop","clear","join","v","kind","pattern","Array","fill","index","console","log","isAPreviousValue","count","d","includes","set","forEach","Række","props","className","available","Slags","Felt","onClick","Value","toString","LæsRække","Tal","Mellemrum","Navne","type","Board","player","sets","map","state","YatzySets","currentSet","currentRound","setState","handleClick","ys","add","back","scratch","disabled","canBeNext","addDice","slags","rowFunc","rowRounds","anders","række","toArray","terning","removeDice","React","Component","screenfull","require","FullScreenToggle","toggleFullScreen","isEnabled","toggle","on","Game","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f948c21.chunk.js","sourcesContent":["export class YatzySet {\r\n    // let BONUS = 50;\r\n\r\n    // var Rounds: [Round]\r\n    // var Left: YatzySet?\r\n    // var Right: YatzySet?\r\n    // var PlayerName : String = \"\"\r\n    constructor(playerId){\r\n        this.playerId = playerId;\r\n        let r = [new UpperRound(1), new UpperRound(2), new UpperRound(3), new UpperRound(4), new UpperRound(5), new UpperRound(6)];\r\n        r.push(new PatternRound([2]));\r\n        r.push(new PatternRound([2, 2]));\r\n        r.push(new PatternRound([2, 2, 2]));\r\n        r.push(new PatternRound([3]));\r\n        r.push(new PatternRound([4]));\r\n        r.push(new PatternRound([3, 3]));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5], 0));\r\n        r.push(new FixedRound([2, 3, 4, 5, 6], 0));\r\n        r.push(new FixedRound([1, 2, 3, 4, 5, 6], 9));\r\n        r.push(new PatternRound([3, 2]));\r\n        r.push(new Round());\r\n        r.push(new PatternRound([6], 100));\r\n        this.rounds = r;\r\n\r\n    }\r\n    // init(){\r\n    //     Rounds = Array()\r\n    //     for r in 1...6 {\r\n    //         Rounds.append(UpperRound(kind: r))\r\n    //     }\r\n    //     Rounds.append(PatternRound(pattern: [2]))\r\n    //     Rounds.append(PatternRound(pattern: [2, 2]))\r\n    //     Rounds.append(PatternRound(pattern: [2, 2, 2]))\r\n    //     Rounds.append(PatternRound(pattern: [3]))\r\n    //     Rounds.append(PatternRound(pattern: [4]))\r\n    //     Rounds.append(PatternRound(pattern: [3, 3]))\r\n    //     Rounds.append(FixedRound(pattern: [1, 2, 3, 4, 5]))\r\n    //     Rounds.append(FixedRound(pattern: [2, 3, 4, 5, 6]))\r\n    //     Rounds.append(FixedRound(pattern: [1, 2, 3, 4, 5, 6], bonus: 9))\r\n    //     Rounds.append(PatternRound(pattern: [3, 2]))\r\n    //     Rounds.append(Round())\r\n    //     Rounds.append(PatternRound(pattern: [6], bonus: 100))\r\n    // }\r\n\r\n    // func Verify() -> Bool {\r\n    //     let p = RoundsPlayed()\r\n    //     if (Left != nil && p != 0){\r\n    //         let l = Left!.RoundsPlayed()\r\n    //         if (l != p && l != p + 1) {\r\n    //             return false\r\n    //         }\r\n    //     }\r\n\r\n\r\n    //     if (Right != nil){\r\n    //         let r = Right!.RoundsPlayed()\r\n    //         if (r != 0){\r\n    //             if (r != p - 1 && r != p){\r\n    //                 return false\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return true\r\n    // }\r\n\r\n    // func RoundsPlayed() -> Int {\r\n    //     return PlayedRounds().count\r\n    // }\r\n    round(i){\r\n        return this.rounds[i];\r\n    }\r\n\r\n    score(){\r\n        return this.rounds.filter(round => !round.blank()).reduce((sum, round) => sum + round.score(), 0) + this.bonus();\r\n    }\r\n \r\n    bonus(){\r\n        return this.isTopSet() && this.rounds.slice(0,6).reduce((sum, r) => sum + r.score(), 0) >= 0 ? 50 : 0;\r\n    }\r\n\r\n    isTopSet(){\r\n        const ts = this.rounds.slice(0, 6).every(round => !round.blank());\r\n        return ts;\r\n    }\r\n\r\n    playedRounds() {\r\n        return this.rounds.filter(round => !round.blank()).length;\r\n    }\r\n\r\n    anders(){\r\n        return this.playerId;\r\n    }\r\n    // func PlayedTopRounds() -> [Round] {\r\n    //     return Rounds[0...5].filter({!$0.Blank()})\r\n    // }\r\n\r\n    // class func  MaxInput(play : Int) -> Int {\r\n    //     return 4\r\n    // }\r\n}\r\n\r\nclass Round {\r\n    constructor() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    score() {\r\n        if (this.scrathed) {\r\n            return 0;\r\n        }\r\n        return this.cubes.reduce((sum, c) => sum + c, 0);\r\n    }\r\n\r\n    blank(){\r\n        return this.cubes.length === 0 && !this.scrathed;\r\n    }\r\n\r\n    add(dice){\r\n        this.cubes.push(dice);\r\n        this.scrathed = false;\r\n\r\n    }\r\n\r\n    scratch(){\r\n        this.cubes = [];\r\n        this.scrathed = true;\r\n    }\r\n\r\n    clear() {\r\n        this.cubes = [];\r\n        this.scrathed = false;\r\n    }\r\n\r\n    back() {\r\n        this.cubes.pop();\r\n        if (this.scrathed){\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    toArray() {\r\n        return this.cubes.join(\"\");\r\n    }\r\n\r\n    toString(){\r\n        if(this.scrathed){\r\n            return \"X\";\r\n        }\r\n        if(this.blank()){\r\n            return \"\";\r\n        }\r\n        return this.score();\r\n    }\r\n\r\n    bonus(){\r\n        return 0;\r\n    }\r\n\r\n    canBeNext(v){\r\n        return this.cubes.length < 6;\r\n    }\r\n\r\n    isIncomplete(){\r\n        return false;\r\n    }\r\n}\r\n\r\nclass UpperRound extends Round {\r\n    constructor(kind) {\r\n        super();\r\n        this.kind = kind;\r\n    }\r\n\r\n    add(dice){\r\n        if (dice === this.kind) {\r\n            super.add(dice)\r\n        }\r\n    }\r\n    \r\n    score(){\r\n        \r\n        return super.score() - 4 * this.kind\r\n    }\r\n    \r\n    bouns(){\r\n        return this.score()\r\n    }\r\n\r\n    canBeNext(v){\r\n        return super.canBeNext(v) && v === this.kind;\r\n    }\r\n    \r\n}\r\n\r\nclass PatternRound extends Round{\r\n    constructor(pattern, bonus = 0) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.kind = Array(pattern.length).fill(0);\r\n        this.bonus = bonus;\r\n        this.index = 0;\r\n    }\r\n    \r\n    add(dice){\r\n        console.log(\"Adding: \" + dice);\r\n        if (this.isAPreviousValue(dice) || this.index >= this.pattern.count){\r\n            return\r\n        }\r\n        for (let i = 0; i < this.pattern[this.index]; i++){\r\n            super.add(dice);\r\n        }\r\n        this.kind[this.index] = dice;\r\n        this.index += 1\r\n    }\r\n    \r\n    canBeNext(v){\r\n        return super.canBeNext(v) && !this.isAPreviousValue(v) && this.index < this.pattern.length\r\n    }\r\n    \r\n    isAPreviousValue(d) {\r\n        return this.kind.includes(d)\r\n    }\r\n    \r\n    clear(){\r\n        super.clear()\r\n        this.kind = Array(this.pattern.length).fill(0)\r\n        this.index = 0\r\n    }\r\n    \r\n    back(){\r\n        if (this.index ===  0){\r\n            this.clear();\r\n            return;\r\n        }\r\n        this.index -= 1;\r\n        this.kind[this.index] = 0;\r\n        for (let i = 0; i < this.pattern[this.index]; i++){\r\n            super.back();\r\n        }\r\n    }\r\n    \r\n    score(){\r\n         return (this.index === this.pattern.length ? this.bonus : 0 ) + super.score();\r\n    }\r\n\r\n    scratch() {\r\n        this.clear()\r\n        super.scratch()\r\n    }\r\n    \r\n    isIncomplete() {\r\n        return this.index !== 0 && this.index < this.pattern.length\r\n    }\r\n}\r\n\r\nclass FixedRound extends Round{\r\n    // let pattern : [Int]\r\n    // var set = false\r\n    // var bonus = 0\r\n    \r\n    constructor(pattern, bonus) {\r\n        super();\r\n        this.pattern = pattern;\r\n        this.bonus = bonus;\r\n        this.set = false;\r\n        \r\n    }\r\n    \r\n    add(dice){\r\n        if (!this.pattern.includes(dice) || this.set){\r\n            return\r\n        }\r\n        this.pattern.forEach(d => super.add(d));\r\n        this.set = true;\r\n    }\r\n    \r\n    canBeNext(v){\r\n        return !this.set && this.pattern.includes(v);\r\n    }\r\n    \r\n    \r\n    clear(){\r\n        super.clear();\r\n        this.set = false;\r\n    }\r\n    \r\n    back(){\r\n        this.pattern.forEach(d => super.back());\r\n        this.set = false;\r\n    }\r\n    \r\n    scratch() {\r\n        super.scratch();\r\n        this.set = false;\r\n    }\r\n    \r\n    score(){\r\n        return (this.set ? this.bonus : 0) + super.score();\r\n    }\r\n    \r\n    ssIncomplete(){\r\n        return false;\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { YatzySet } from './yatzy.js';\r\n\r\nfunction Række(props) {\r\n    return (\r\n        <div className=\"række\">\r\n            <span className={(props.available ? \"etiket\" : \"etiket brugt\")} > {props.Slags}</span>\r\n            <Felt onClick={() => props.onClick(0)} Value={props.rounds?.[0].toString()}/>\r\n            <Felt onClick={() => props.onClick(1)} Value={props.rounds?.[1].toString()}/>\r\n            <Felt onClick={() => props.onClick(2)} Value={props.rounds?.[2].toString()}/>\r\n            <Felt onClick={() => props.onClick(3)} Value={props.rounds?.[3].toString()}/>\r\n            <Felt onClick={() => props.onClick(4)} Value={props.rounds?.[4].toString()}/>\r\n            <Felt onClick={() => props.onClick(5)} Value={props.rounds?.[5].toString()}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LæsRække(props) {\r\n    return (\r\n        <div className=\"række\">\r\n            <span className=\"etiket\"> {props.Slags}</span>\r\n            <Felt Value={props.Tal[0]}> </Felt>\r\n            <Felt Value={props.Tal[1]}> </Felt>\r\n            <Felt Value={props.Tal[2]}> </Felt>\r\n            <Felt Value={props.Tal[3]}> </Felt>\r\n            <Felt Value={props.Tal[4]}> </Felt>\r\n            <Felt Value={props.Tal[5]}> </Felt>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction Mellemrum(props) {\r\n    return (\r\n        <div className=\"mellemrum\">\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Navne(props) {\r\n    return (\r\n        <div className=\"øverst\">\r\n            <span className=\"etiket\"> Navn</span>\r\n            <input type=\"text\" className={props.playerId === 0 ? \"felt navn valgt\" : \"felt navn\"}></input>\r\n            <input type=\"text\" className={props.playerId === 1 ? \"felt navn valgt\" : \"felt navn\"}></input>\r\n            <input type=\"text\" className={props.playerId === 2 ? \"felt navn valgt\" : \"felt navn\"}></input>\r\n            <input type=\"text\" className={props.playerId === 3 ? \"felt navn valgt\" : \"felt navn\"}></input>\r\n            <input type=\"text\" className={props.playerId === 4 ? \"felt navn valgt\" : \"felt navn\"}></input>\r\n            <input type=\"text\" className={props.playerId === 5 ? \"felt navn valgt\" : \"felt navn\"}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction Felt(props) {\r\n    return (\r\n        <button\r\n            className=\"felt\"\r\n            onClick={props.onClick}\r\n        >\r\n            {props.Value}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var player = 0;\r\n        let sets = Array(6).fill(null).map(() => new YatzySet(player++));\r\n        this.state = {\r\n            YatzySets: sets,\r\n            currentSet: sets[0],\r\n            currentRound: sets[0].round(0),\r\n\r\n        }\r\n    }\r\n\r\n    handleClick(player, round) {\r\n        console.log(\"Call back player: \" + player + \" round: \" + round);\r\n        var set = this.state.YatzySets[player];\r\n        var round = set.round(round);\r\n        this.setState({\r\n            YatzySets: this.state.YatzySets,\r\n            currentSet: set,\r\n            currentRound: round\r\n        });\r\n    }\r\n\r\n    rowFunc(round) {\r\n        return (player) => this.handleClick(player, round)\r\n    }\r\n\r\n    rowRounds(i) {\r\n        let result = this.state.YatzySets.map(ys => ys.round(i));\r\n        return result;\r\n    }\r\n\r\n    addDice(i) {\r\n        this.state.currentRound.add(i);\r\n        this.setState(this.state);\r\n    }\r\n\r\n    removeDice() {\r\n        console.log(\"Back\");\r\n        this.state.currentRound.back();\r\n        this.setState(this.state);\r\n    }\r\n\r\n    scratch(){\r\n        console.log(\"Scratch\");\r\n        this.state.currentRound.scratch();\r\n        this.setState(this.state);\r\n\r\n    }\r\n\r\n    terning(i) {\r\n        return <button className=\"terning\" disabled={!this.state.currentRound.canBeNext(i)} onClick={() => this.addDice(i)}>{i}</button>\r\n\r\n    }\r\n\r\n    række (round, slags){\r\n        return <Række Slags={slags} onClick={this.rowFunc(round)} rounds={this.rowRounds(round)} available={this.state.currentSet.rounds[round].blank()}></Række>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"blok\">\r\n                    <Navne playerId={this.state.currentSet.anders()}/>\r\n                    {this.række(0, \"1\")}\r\n                    {this.række(1, \"2\")}\r\n                    {this.række(2, \"3\")}\r\n                    {this.række(3, \"4\")}\r\n                    {this.række(4, \"5\")}\r\n                    {this.række(5, \"6\")}\r\n                    <Mellemrum />\r\n                    <LæsRække Slags=\"Bonus\" Tal={this.state.YatzySets.map(ys => ys.bonus())}></LæsRække>\r\n                    <Mellemrum />\r\n                    {this.række(6, \"1 par\")}\r\n                    {this.række(7, \"2 par\")}\r\n                    {this.række(8, \"3 par\")}\r\n                    {this.række(9, \"3 ens\")}\r\n                    {this.række(10, \"4 ens\")}\r\n                    {this.række(11, \"2 x 3 ens\")}\r\n                    {this.række(12, \"Lav\")}\r\n                    {this.række(13, \"Høj\")}\r\n                    {this.række(14, \"Cameron\")}\r\n                    {this.række(15, \"Hus\")}\r\n                    {this.række(16, \"Chance\")}\r\n                    {this.række(17, \"Yatzy\")}\r\n                    <Mellemrum />\r\n                    <LæsRække Slags=\"Total\" Tal={this.state.YatzySets.map(ys => ys.score())}></LæsRække>\r\n\r\n                </div>\r\n                <div className=\"nederst\">\r\n                    <div className=\"slag\">\r\n                        {this.state.currentRound.toArray()}\r\n                    </div>\r\n                    <div className=\"knaplinje\">\r\n                        {this.terning(1)}\r\n                        {this.terning(2)}\r\n                        {this.terning(3)}\r\n                        {this.terning(4)}\r\n                        {this.terning(5)}\r\n                        {this.terning(6)}\r\n                        <button className=\"terning\" onClick={() => this.scratch()}>X</button>\r\n                        <button className=\"terning\" disabled={this.state.currentRound.blank()} onClick={() => this.removeDice()}>&lt;</button>\r\n                        <FullScreenToggle />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst screenfull = require('screenfull');\r\n\r\nclass FullScreenToggle extends React.Component {\r\n    componentDidMount() {\r\n      if (screenfull.isEnabled) {\r\n        screenfull.on('change', () => {\r\n        //   console.log('Am I fullscreen?', screenfull.isFullscreen ? 'Yes' : 'No');\r\n        });\r\n      }\r\n    }\r\n  \r\n    // enabling fullscreen has to be done after some user input\r\n    toggleFullScreen = () => {\r\n      if (screenfull.isEnabled) {\r\n        screenfull.toggle();\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <button className=\"terning\" onClick={this.toggleFullScreen}>&#x26F6; </button>\r\n      )\r\n    }\r\n  }\r\n\r\nclass Game extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Board />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     window.addEventListener('beforeunload', this.beforeunload.bind(this));\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     window.removeEventListener('beforeunload', this.beforeunload.bind(this));\r\n    // }\r\n\r\n    // beforeunload(e) {\r\n    //     console.log('Before unload');\r\n    //     e.preventDefault();\r\n    //     e.returnValue = true;\r\n    // }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}